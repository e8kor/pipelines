2021/01/05 22:48:34 [INFO] Terraform version: 0.14.3  
2021/01/05 22:48:34 [INFO] Go runtime version: go1.15.2
2021/01/05 22:48:34 [INFO] CLI args: []string{"/Users/e8kor/.asdf/installs/terraform/0.14.3/bin/terraform", "apply"}
2021/01/05 22:48:34 [DEBUG] Attempting to open CLI config file: /Users/e8kor/.terraformrc
2021/01/05 22:48:34 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/01/05 22:48:34 Loading CLI configuration from /Users/e8kor/.terraform.d/credentials.tfrc.json
2021/01/05 22:48:34 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/01/05 22:48:34 [DEBUG] ignoring non-existing provider search directory /Users/e8kor/.terraform.d/plugins
2021/01/05 22:48:34 [DEBUG] ignoring non-existing provider search directory /Users/e8kor/Library/Application Support/io.terraform/plugins
2021/01/05 22:48:34 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/01/05 22:48:34 [INFO] CLI command args: []string{"apply"}
2021/01/05 22:48:34 [TRACE] Meta.Backend: built configuration for "kubernetes" backend with hash value 3256762482
2021/01/05 22:48:34 [TRACE] Preserving existing state lineage "2a201cf3-17c1-2d3c-8aed-b9f11f858109"
2021/01/05 22:48:34 [TRACE] Preserving existing state lineage "2a201cf3-17c1-2d3c-8aed-b9f11f858109"
2021/01/05 22:48:34 [TRACE] Meta.Backend: working directory was previously initialized for "kubernetes" backend
2021/01/05 22:48:34 [TRACE] Meta.Backend: using already-initialized, unchanged "kubernetes" backend configuration
2021/01/05 22:48:34 [INFO] Successfully loaded config file (/Users/e8kor/.kube/config; default context)
2021/01/05 22:48:34 [TRACE] Meta.Backend: instantiated backend of type *kubernetes.Backend
2021/01/05 22:48:34 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/01/05 22:48:34 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/01/05 22:48:34 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/helm v2.0.1 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/helm/2.0.1/darwin_amd64
2021/01/05 22:48:34 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v1.13.3 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64
2021/01/05 22:48:34 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/random v3.0.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64
2021/01/05 22:48:34 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/helm/2.0.1/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/helm 2.0.1
2021/01/05 22:48:34 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 1.13.3
2021/01/05 22:48:34 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/random 3.0.0
2021/01/05 22:48:34 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers
2021/01/05 22:48:34 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers
2021/01/05 22:48:34 [DEBUG] checking for provisioner in "."
2021/01/05 22:48:34 [DEBUG] checking for provisioner in "/Users/e8kor/.asdf/installs/terraform/0.14.3/bin"
2021/01/05 22:48:34 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/01/05 22:48:34 [TRACE] Meta.Backend: backend *kubernetes.Backend does not support operations, so wrapping it in a local backend
2021/01/05 22:48:34 [INFO] backend/local: starting Apply operation
2021/01/05 22:48:34 [TRACE] backend/local: requesting state manager for workspace "default"
2021/01/05 22:48:34 [TRACE] backend/local: requesting state lock for workspace "default"
2021/01/05 22:48:34 [TRACE] backend/local: reading remote state for workspace "default"
2021/01/05 22:48:34 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/01/05 22:48:34 [TRACE] backend/local: building context for current working directory
2021/01/05 22:48:34 [TRACE] terraform.NewContext: starting
2021/01/05 22:48:34 [TRACE] terraform.NewContext: loading provider schemas
2021/01/05 22:48:34 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/helm"
2021-01-05T22:48:34.934+0100 [INFO]  plugin: configuring client automatic mTLS
2021-01-05T22:48:34.959+0100 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/helm/2.0.1/darwin_amd64/terraform-provider-helm_v2.0.1_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/helm/2.0.1/darwin_amd64/terraform-provider-helm_v2.0.1_x5]
2021-01-05T22:48:34.963+0100 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/helm/2.0.1/darwin_amd64/terraform-provider-helm_v2.0.1_x5 pid=85308
2021-01-05T22:48:34.963+0100 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/helm/2.0.1/darwin_amd64/terraform-provider-helm_v2.0.1_x5
2021-01-05T22:48:34.996+0100 [INFO]  plugin.terraform-provider-helm_v2.0.1_x5: configuring server automatic mTLS: timestamp=2021-01-05T22:48:34.996+0100
2021-01-05T22:48:35.022+0100 [DEBUG] plugin.terraform-provider-helm_v2.0.1_x5: plugin address: address=/var/folders/ry/fr4q9mg93gn8zzz2cr3w5xxr0000gn/T/plugin369901691 network=unix timestamp=2021-01-05T22:48:35.021+0100
2021-01-05T22:48:35.022+0100 [DEBUG] plugin: using plugin: version=5
2021/01/05 22:48:35 [TRACE] GRPCProvider: GetSchema
2021-01-05T22:48:35.076+0100 [TRACE] plugin.stdio: waiting for stdio data
2021/01/05 22:48:35 [TRACE] GRPCProvider: Close
2021-01-05T22:48:35.080+0100 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-01-05T22:48:35.082+0100 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/helm/2.0.1/darwin_amd64/terraform-provider-helm_v2.0.1_x5 pid=85308
2021-01-05T22:48:35.082+0100 [DEBUG] plugin: plugin exited
2021/01/05 22:48:35 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-01-05T22:48:35.082+0100 [INFO]  plugin: configuring client automatic mTLS
2021-01-05T22:48:35.115+0100 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4]
2021-01-05T22:48:35.119+0100 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 pid=85309
2021-01-05T22:48:35.119+0100 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4
2021-01-05T22:48:35.156+0100 [INFO]  plugin.terraform-provider-kubernetes_v1.13.3_x4: configuring server automatic mTLS: timestamp=2021-01-05T22:48:35.155+0100
2021-01-05T22:48:35.185+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: plugin address: address=/var/folders/ry/fr4q9mg93gn8zzz2cr3w5xxr0000gn/T/plugin535049480 network=unix timestamp=2021-01-05T22:48:35.185+0100
2021-01-05T22:48:35.185+0100 [DEBUG] plugin: using plugin: version=5
2021/01/05 22:48:35 [TRACE] GRPCProvider: GetSchema
2021-01-05T22:48:35.242+0100 [TRACE] plugin.stdio: waiting for stdio data
2021/01/05 22:48:35 [TRACE] No provider meta schema returned
2021/01/05 22:48:35 [TRACE] GRPCProvider: Close
2021-01-05T22:48:35.308+0100 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-01-05T22:48:35.309+0100 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 pid=85309
2021-01-05T22:48:35.310+0100 [DEBUG] plugin: plugin exited
2021/01/05 22:48:35 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/random"
2021-01-05T22:48:35.310+0100 [INFO]  plugin: configuring client automatic mTLS
2021-01-05T22:48:35.335+0100 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5]
2021-01-05T22:48:35.338+0100 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 pid=85310
2021-01-05T22:48:35.338+0100 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5
2021-01-05T22:48:35.348+0100 [INFO]  plugin.terraform-provider-random_v3.0.0_x5: configuring server automatic mTLS: timestamp=2021-01-05T22:48:35.348+0100
2021-01-05T22:48:35.375+0100 [DEBUG] plugin.terraform-provider-random_v3.0.0_x5: plugin address: address=/var/folders/ry/fr4q9mg93gn8zzz2cr3w5xxr0000gn/T/plugin397491453 network=unix timestamp=2021-01-05T22:48:35.375+0100
2021-01-05T22:48:35.375+0100 [DEBUG] plugin: using plugin: version=5
2021/01/05 22:48:35 [TRACE] GRPCProvider: GetSchema
2021-01-05T22:48:35.441+0100 [TRACE] plugin.stdio: waiting for stdio data
2021/01/05 22:48:35 [TRACE] GRPCProvider: Close
2021-01-05T22:48:35.466+0100 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 pid=85310
2021-01-05T22:48:35.466+0100 [DEBUG] plugin: plugin exited
2021/01/05 22:48:35 [TRACE] terraform.NewContext: complete
2021/01/05 22:48:35 [TRACE] backend/local: finished building terraform.Context
2021/01/05 22:48:35 [TRACE] backend/local: requesting interactive input, if necessary
2021/01/05 22:48:35 [TRACE] Context.Input: Prompting for provider arguments
2021/01/05 22:48:35 [TRACE] Context.Input: Provider provider.helm declared at 00_providers.tf:1,1-16
2021/01/05 22:48:35 [TRACE] Context.Input: Provider provider.kubernetes implied by resource block at 03_storage_secrets.tf:43,1-50
2021/01/05 22:48:35 [TRACE] Context.Input: Provider provider.random implied by resource block at 03_database_secrets.tf:19,1-38
2021/01/05 22:48:35 [TRACE] Context.Input: Input for provider.helm: map[string]cty.Value{}
2021/01/05 22:48:35 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/01/05 22:48:35 [TRACE] Context.Input: Input for provider.random: map[string]cty.Value{}
2021/01/05 22:48:35 [TRACE] backend/local: running validation operation
2021/01/05 22:48:35 [INFO] terraform: building graph: GraphTypeValidate
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/01/05 22:48:35 [TRACE] ConfigTransformer: Starting for path: 
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
  kubernetes_secret.admin - *terraform.NodeValidatableResource
  kubernetes_secret.database - *terraform.NodeValidatableResource
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
  kubernetes_secret.storage - *terraform.NodeValidatableResource
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
  kubernetes_service.database - *terraform.NodeValidatableResource
  kubernetes_service.storage - *terraform.NodeValidatableResource
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
  random_password.database - *terraform.NodeValidatableResource
  random_password.storage - *terraform.NodeValidatableResource
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
  kubernetes_secret.admin - *terraform.NodeValidatableResource
  kubernetes_secret.database - *terraform.NodeValidatableResource
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
  kubernetes_secret.storage - *terraform.NodeValidatableResource
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
  kubernetes_service.database - *terraform.NodeValidatableResource
  kubernetes_service.storage - *terraform.NodeValidatableResource
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
  random_password.database - *terraform.NodeValidatableResource
  random_password.storage - *terraform.NodeValidatableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/01/05 22:48:35 [TRACE] OutputTransformer: adding database_username as *terraform.NodeApplyableOutput
2021/01/05 22:48:35 [TRACE] OutputTransformer: adding database_name as *terraform.NodeApplyableOutput
2021/01/05 22:48:35 [TRACE] OutputTransformer: adding database_password as *terraform.NodeApplyableOutput
2021/01/05 22:48:35 [TRACE] OutputTransformer: adding storage_access_key as *terraform.NodeApplyableOutput
2021/01/05 22:48:35 [TRACE] OutputTransformer: adding storage_password as *terraform.NodeApplyableOutput
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
  kubernetes_secret.admin - *terraform.NodeValidatableResource
  kubernetes_secret.database - *terraform.NodeValidatableResource
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
  kubernetes_secret.storage - *terraform.NodeValidatableResource
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
  kubernetes_service.database - *terraform.NodeValidatableResource
  kubernetes_service.storage - *terraform.NodeValidatableResource
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  random_password.database - *terraform.NodeValidatableResource
  random_password.storage - *terraform.NodeValidatableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.StateTransformer
2021/01/05 22:48:35 [TRACE] StateTransformer: state is empty, so nothing to do
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-password" (*terraform.NodeValidatableResource) config from 03_database_secrets.tf:54,1-49
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-password
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage" (*terraform.NodeValidatableResource) config from 03_storage_secrets.tf:21,1-39
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage-secret-key" (*terraform.NodeValidatableResource) config from 03_storage_secrets.tf:43,1-50
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage-secret-key
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_stateful_set.database" (*terraform.NodeValidatableResource) config from 22_database_stateful_set.tf:1,1-46
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_stateful_set.database
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.admin" (*terraform.NodeValidatableResource) config from 02_service_account.tf:1,1-37
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.admin
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-name" (*terraform.NodeValidatableResource) config from 03_database_secrets.tf:43,1-45
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-name
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-username" (*terraform.NodeValidatableResource) config from 03_database_secrets.tf:65,1-49
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-username
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_stateful_set.storage" (*terraform.NodeValidatableResource) config from 33_storage_stateful_set.tf:1,1-45
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_stateful_set.storage
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-0" (*terraform.NodeValidatableResource) config from 32_storage_volume.tf:1,1-52
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-0
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.database" (*terraform.NodeValidatableResource) config from 23_database_service.tf:1,1-41
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.database
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service_account.admin" (*terraform.NodeValidatableResource) config from 02_service_account.tf:12,1-46
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service_account.admin
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-2" (*terraform.NodeValidatableResource) config from 32_storage_volume.tf:47,1-52
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-2
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage-access-key" (*terraform.NodeValidatableResource) config from 03_storage_secrets.tf:32,1-50
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage-access-key
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database" (*terraform.NodeValidatableResource) config from 03_database_secrets.tf:30,1-40
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.database-0" (*terraform.NodeValidatableResource) config from 21_database_volume.tf:1,1-53
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.database-0
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "random_password.storage" (*terraform.NodeValidatableResource) config from 03_storage_secrets.tf:10,1-37
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to random_password.storage
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.storage" (*terraform.NodeValidatableResource) config from 31_storage_service.tf:1,1-40
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.storage
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_cluster_role_binding.admin" (*terraform.NodeValidatableResource) config from 02_service_account.tf:22,1-51
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_cluster_role_binding.admin
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "random_password.database" (*terraform.NodeValidatableResource) config from 03_database_secrets.tf:19,1-38
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to random_password.database
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-3" (*terraform.NodeValidatableResource) config from 32_storage_volume.tf:69,1-52
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-3
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-1" (*terraform.NodeValidatableResource) config from 32_storage_volume.tf:24,1-52
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-1
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.storage-service" (*terraform.NodeValidatableResource) config from 34_storage_service.tf:1,1-48
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.storage-service
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/01/05 22:48:35 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/helm\"]" provider configuration from 00_providers.tf:1,1-16
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
  kubernetes_secret.admin - *terraform.NodeValidatableResource
  kubernetes_secret.database - *terraform.NodeValidatableResource
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
  kubernetes_secret.storage - *terraform.NodeValidatableResource
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
  kubernetes_service.database - *terraform.NodeValidatableResource
  kubernetes_service.storage - *terraform.NodeValidatableResource
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/helm"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeValidatableResource
  random_password.storage - *terraform.NodeValidatableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/01/05 22:48:35 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/kubernetes"], implied first by kubernetes_persistent_volume.database-0
2021/01/05 22:48:35 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/random"], implied first by random_password.storage
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
  kubernetes_secret.admin - *terraform.NodeValidatableResource
  kubernetes_secret.database - *terraform.NodeValidatableResource
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
  kubernetes_secret.storage - *terraform.NodeValidatableResource
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
  kubernetes_service.database - *terraform.NodeValidatableResource
  kubernetes_service.storage - *terraform.NodeValidatableResource
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/helm"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeValidatableResource
  random_password.storage - *terraform.NodeValidatableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.storage
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_service.storage" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_cluster_role_binding.admin
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_cluster_role_binding.admin" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-1
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-1" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.storage-service
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_service.storage-service" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage-secret-key
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.storage-secret-key" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-username
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.database-username" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-0
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-0" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.database
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_service.database" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.admin
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.admin" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage-access-key
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.storage-access-key" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_stateful_set.database
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_stateful_set.database" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_stateful_set.storage
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_stateful_set.storage" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service_account.admin
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_service_account.admin" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.database-0
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.database-0" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.database" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/random"] serving random_password.database
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "random_password.database" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.storage" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-2
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-2" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/random"] serving random_password.storage
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "random_password.storage" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-3
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-3" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-password
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.database-password" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-name
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.database-name" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/helm"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/01/05 22:48:35 [DEBUG] pruning unused provider["registry.terraform.io/hashicorp/helm"]
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-3
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-1
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to random_password.database
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.storage-service
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage-secret-key
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_stateful_set.database
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-password
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-0
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.database
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.admin
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-name
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-username
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_stateful_set.storage
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service_account.admin
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-2
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage-access-key
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.database-0
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to random_password.storage
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.storage
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_cluster_role_binding.admin
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.database-0" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "random_password.storage" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.database" references: [var.database_username random_password.database var.database_name]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "output.database_username" references: [var.database_username]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/random\"]" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_service.storage" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_cluster_role_binding.admin" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "var.storage_access_key" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "output.storage_password" references: [random_password.storage]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-3" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-1" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "random_password.database" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "var.database_name" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_service.storage-service" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage-secret-key" references: [random_password.storage]
2021-01-05T22:48:35.466+0100 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_stateful_set.database" references: [var.database_username var.database_name random_password.database]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-password" references: [random_password.database]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage" references: [var.storage_access_key random_password.storage]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-0" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_service.database" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.admin" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-name" references: [var.database_name]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-username" references: [var.database_username]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_stateful_set.storage" references: [var.storage_access_key random_password.storage]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_service_account.admin" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-2" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "output.database_password" references: [random_password.database]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "output.storage_access_key" references: [var.storage_access_key]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage-access-key" references: [var.storage_access_key]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "var.database_username" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "output.database_name" references: [var.database_name]
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
  kubernetes_service.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
    var.storage_access_key - *terraform.NodeRootVariable
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database - *terraform.NodeValidatableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
  kubernetes_service.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
    var.storage_access_key - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    kubernetes_secret.admin - *terraform.NodeValidatableResource
    kubernetes_secret.database - *terraform.NodeValidatableResource
    kubernetes_secret.database-name - *terraform.NodeValidatableResource
    kubernetes_secret.database-password - *terraform.NodeValidatableResource
    kubernetes_secret.database-username - *terraform.NodeValidatableResource
    kubernetes_secret.storage - *terraform.NodeValidatableResource
    kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    kubernetes_service.database - *terraform.NodeValidatableResource
    kubernetes_service.storage - *terraform.NodeValidatableResource
    kubernetes_service.storage-service - *terraform.NodeValidatableResource
    kubernetes_service_account.admin - *terraform.NodeValidatableResource
    kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    random_password.storage - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
    var.storage_access_key - *terraform.NodeRootVariable
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database - *terraform.NodeValidatableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
  kubernetes_service.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
    var.storage_access_key - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    kubernetes_secret.admin - *terraform.NodeValidatableResource
    kubernetes_secret.database - *terraform.NodeValidatableResource
    kubernetes_secret.database-name - *terraform.NodeValidatableResource
    kubernetes_secret.database-password - *terraform.NodeValidatableResource
    kubernetes_secret.database-username - *terraform.NodeValidatableResource
    kubernetes_secret.storage - *terraform.NodeValidatableResource
    kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    kubernetes_service.database - *terraform.NodeValidatableResource
    kubernetes_service.storage - *terraform.NodeValidatableResource
    kubernetes_service.storage-service - *terraform.NodeValidatableResource
    kubernetes_service_account.admin - *terraform.NodeValidatableResource
    kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    random_password.storage - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
    var.storage_access_key - *terraform.NodeRootVariable
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database - *terraform.NodeValidatableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    kubernetes_secret.admin - *terraform.NodeValidatableResource
    kubernetes_secret.database - *terraform.NodeValidatableResource
    kubernetes_secret.database-name - *terraform.NodeValidatableResource
    kubernetes_secret.database-password - *terraform.NodeValidatableResource
    kubernetes_secret.database-username - *terraform.NodeValidatableResource
    kubernetes_secret.storage - *terraform.NodeValidatableResource
    kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    kubernetes_service.database - *terraform.NodeValidatableResource
    kubernetes_service.storage - *terraform.NodeValidatableResource
    kubernetes_service.storage-service - *terraform.NodeValidatableResource
    kubernetes_service_account.admin - *terraform.NodeValidatableResource
    kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    random_password.storage - *terraform.NodeValidatableResource
  random_password.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
  kubernetes_service.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
    var.storage_access_key - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    kubernetes_secret.admin - *terraform.NodeValidatableResource
    kubernetes_secret.database - *terraform.NodeValidatableResource
    kubernetes_secret.database-name - *terraform.NodeValidatableResource
    kubernetes_secret.database-password - *terraform.NodeValidatableResource
    kubernetes_secret.database-username - *terraform.NodeValidatableResource
    kubernetes_secret.storage - *terraform.NodeValidatableResource
    kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    kubernetes_service.database - *terraform.NodeValidatableResource
    kubernetes_service.storage - *terraform.NodeValidatableResource
    kubernetes_service.storage-service - *terraform.NodeValidatableResource
    kubernetes_service_account.admin - *terraform.NodeValidatableResource
    kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    random_password.storage - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
    var.storage_access_key - *terraform.NodeRootVariable
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database - *terraform.NodeValidatableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    kubernetes_secret.admin - *terraform.NodeValidatableResource
    kubernetes_secret.database - *terraform.NodeValidatableResource
    kubernetes_secret.database-name - *terraform.NodeValidatableResource
    kubernetes_secret.database-password - *terraform.NodeValidatableResource
    kubernetes_secret.database-username - *terraform.NodeValidatableResource
    kubernetes_secret.storage - *terraform.NodeValidatableResource
    kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    kubernetes_service.database - *terraform.NodeValidatableResource
    kubernetes_service.storage - *terraform.NodeValidatableResource
    kubernetes_service.storage-service - *terraform.NodeValidatableResource
    kubernetes_service_account.admin - *terraform.NodeValidatableResource
    kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    random_password.storage - *terraform.NodeValidatableResource
  random_password.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-name - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-password - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
  kubernetes_secret.database-username - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
  kubernetes_service.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeValidatableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeValidatableResource
    var.storage_access_key - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    kubernetes_secret.admin - *terraform.NodeValidatableResource
    kubernetes_secret.database - *terraform.NodeValidatableResource
    kubernetes_secret.database-name - *terraform.NodeValidatableResource
    kubernetes_secret.database-password - *terraform.NodeValidatableResource
    kubernetes_secret.database-username - *terraform.NodeValidatableResource
    kubernetes_secret.storage - *terraform.NodeValidatableResource
    kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    kubernetes_service.database - *terraform.NodeValidatableResource
    kubernetes_service.storage - *terraform.NodeValidatableResource
    kubernetes_service.storage-service - *terraform.NodeValidatableResource
    kubernetes_service_account.admin - *terraform.NodeValidatableResource
    kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database - *terraform.NodeValidatableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_cluster_role_binding.admin - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeValidatableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeValidatableResource
    kubernetes_secret.admin - *terraform.NodeValidatableResource
    kubernetes_secret.database - *terraform.NodeValidatableResource
    kubernetes_secret.database-name - *terraform.NodeValidatableResource
    kubernetes_secret.database-password - *terraform.NodeValidatableResource
    kubernetes_secret.database-username - *terraform.NodeValidatableResource
    kubernetes_secret.storage - *terraform.NodeValidatableResource
    kubernetes_secret.storage-access-key - *terraform.NodeValidatableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeValidatableResource
    kubernetes_service.database - *terraform.NodeValidatableResource
    kubernetes_service.storage - *terraform.NodeValidatableResource
    kubernetes_service.storage-service - *terraform.NodeValidatableResource
    kubernetes_service_account.admin - *terraform.NodeValidatableResource
    kubernetes_stateful_set.database - *terraform.NodeValidatableResource
    kubernetes_stateful_set.storage - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
    random_password.database - *terraform.NodeValidatableResource
    random_password.storage - *terraform.NodeValidatableResource
  random_password.database - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [DEBUG] Starting graph walk: walkValidate
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/random\"]"
2021/01/05 22:48:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"]": starting visit (*terraform.NodeApplyableProvider)
2021-01-05T22:48:35.483+0100 [INFO]  plugin: configuring client automatic mTLS
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "var.database_name"
2021/01/05 22:48:35 [TRACE] vertex "var.database_name": starting visit (*terraform.NodeRootVariable)
2021/01/05 22:48:35 [TRACE] vertex "var.database_name": visit complete
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/01/05 22:48:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "var.database_username"
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "var.storage_access_key"
2021/01/05 22:48:35 [TRACE] vertex "var.storage_access_key": starting visit (*terraform.NodeRootVariable)
2021/01/05 22:48:35 [TRACE] vertex "var.storage_access_key": visit complete
2021/01/05 22:48:35 [TRACE] vertex "var.database_username": starting visit (*terraform.NodeRootVariable)
2021/01/05 22:48:35 [TRACE] vertex "var.database_username": visit complete
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "output.storage_access_key"
2021/01/05 22:48:35 [TRACE] vertex "output.storage_access_key": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "output.database_name"
2021/01/05 22:48:35 [TRACE] vertex "output.database_name": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "output.database_username"
2021/01/05 22:48:35 [TRACE] vertex "output.database_username": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:35 [TRACE] ExecuteWriteOutput: Saving Create change for output.storage_access_key in changeset
2021/01/05 22:48:35 [TRACE] EvalWriteOutput: Removing output.storage_access_key from state (it is now null)
2021/01/05 22:48:35 [TRACE] vertex "output.storage_access_key": visit complete
2021/01/05 22:48:35 [TRACE] ExecuteWriteOutput: Saving Create change for output.database_name in changeset
2021/01/05 22:48:35 [TRACE] EvalWriteOutput: Removing output.database_name from state (it is now null)
2021/01/05 22:48:35 [TRACE] vertex "output.database_name": visit complete
2021/01/05 22:48:35 [TRACE] ExecuteWriteOutput: Saving Create change for output.database_username in changeset
2021/01/05 22:48:35 [TRACE] EvalWriteOutput: Removing output.database_username from state (it is now null)
2021/01/05 22:48:35 [TRACE] vertex "output.database_username": visit complete
2021-01-05T22:48:35.532+0100 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5]
2021-01-05T22:48:35.536+0100 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 pid=85411
2021-01-05T22:48:35.536+0100 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5
2021-01-05T22:48:35.545+0100 [INFO]  plugin.terraform-provider-random_v3.0.0_x5: configuring server automatic mTLS: timestamp=2021-01-05T22:48:35.545+0100
2021-01-05T22:48:35.571+0100 [DEBUG] plugin.terraform-provider-random_v3.0.0_x5: plugin address: network=unix address=/var/folders/ry/fr4q9mg93gn8zzz2cr3w5xxr0000gn/T/plugin606727390 timestamp=2021-01-05T22:48:35.571+0100
2021-01-05T22:48:35.571+0100 [DEBUG] plugin: using plugin: version=5
2021/01/05 22:48:35 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/random\"]" provider for provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:35 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/random"]: no configuration at all
2021/01/05 22:48:35 [TRACE] GRPCProvider: GetSchema
2021-01-05T22:48:35.634+0100 [TRACE] plugin.stdio: waiting for stdio data
2021-01-05T22:48:35.634+0100 [INFO]  plugin: configuring client automatic mTLS
2021/01/05 22:48:35 [TRACE] GRPCProvider: PrepareProviderConfig
2021/01/05 22:48:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"]": visit complete
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "random_password.storage"
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "random_password.database"
2021/01/05 22:48:35 [TRACE] vertex "random_password.database": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] vertex "random_password.storage": starting visit (*terraform.NodeValidatableResource)
2021-01-05T22:48:35.660+0100 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4]
2021-01-05T22:48:35.666+0100 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 pid=85412
2021-01-05T22:48:35.666+0100 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4
2021-01-05T22:48:35.703+0100 [INFO]  plugin.terraform-provider-kubernetes_v1.13.3_x4: configuring server automatic mTLS: timestamp=2021-01-05T22:48:35.703+0100
2021-01-05T22:48:35.729+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: plugin address: address=/var/folders/ry/fr4q9mg93gn8zzz2cr3w5xxr0000gn/T/plugin091320595 network=unix timestamp=2021-01-05T22:48:35.729+0100
2021-01-05T22:48:35.730+0100 [DEBUG] plugin: using plugin: version=5
2021/01/05 22:48:35 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-01-05T22:48:35.783+0100 [TRACE] plugin.stdio: waiting for stdio data
2021/01/05 22:48:35 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: no configuration at all
2021/01/05 22:48:35 [TRACE] GRPCProvider: GetSchema
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] vertex "random_password.storage": visit complete
2021/01/05 22:48:35 [TRACE] vertex "random_password.database": visit complete
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "output.database_password"
2021/01/05 22:48:35 [TRACE] vertex "output.database_password": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "output.storage_password"
2021/01/05 22:48:35 [TRACE] vertex "output.storage_password": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/random\"] (close)"
2021/01/05 22:48:35 [TRACE] ExecuteWriteOutput: Saving Create change for output.storage_password in changeset
2021/01/05 22:48:35 [TRACE] EvalWriteOutput: Removing output.storage_password from state (it is now null)
2021/01/05 22:48:35 [TRACE] vertex "output.storage_password": visit complete
2021/01/05 22:48:35 [TRACE] ExecuteWriteOutput: Saving Create change for output.database_password in changeset
2021/01/05 22:48:35 [TRACE] EvalWriteOutput: Removing output.database_password from state (it is now null)
2021/01/05 22:48:35 [TRACE] vertex "output.database_password": visit complete
2021/01/05 22:48:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/01/05 22:48:35 [TRACE] GRPCProvider: Close
2021-01-05T22:48:35.785+0100 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-01-05T22:48:35.787+0100 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 pid=85411
2021-01-05T22:48:35.787+0100 [DEBUG] plugin: plugin exited
2021/01/05 22:48:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"] (close)": visit complete
2021/01/05 22:48:35 [TRACE] No provider meta schema returned
2021/01/05 22:48:35 [TRACE] GRPCProvider: PrepareProviderConfig
2021/01/05 22:48:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_secret.storage-secret-key"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.storage-secret-key": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-0"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_persistent_volume.storage-0": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_service_account.admin"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_service_account.admin": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_secret.storage-access-key"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.storage-access-key": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_service.database"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_service.database": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_stateful_set.database"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_stateful_set.database": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_secret.storage"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.storage": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_stateful_set.storage"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_stateful_set.storage": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.database-0"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_persistent_volume.database-0": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_secret.database"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.database": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_cluster_role_binding.admin"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_cluster_role_binding.admin": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_secret.database-password"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.database-password": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_secret.admin"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.admin": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_secret.database-username"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.database-username": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-3"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_persistent_volume.storage-3": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_secret.database-name"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.database-name": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_service.storage-service"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_service.storage-service": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-2"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_persistent_volume.storage-2": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-1"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_persistent_volume.storage-1": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "kubernetes_service.storage"
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_service.storage": starting visit (*terraform.NodeValidatableResource)
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.storage": visit complete
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.database": visit complete
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.storage-access-key": visit complete
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_service_account.admin": visit complete
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_service.database": visit complete
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.storage-secret-key": visit complete
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_persistent_volume.database-0": visit complete
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_persistent_volume.storage-0": visit complete
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_service.storage-service": visit complete
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.database-name": visit complete
2021/01/05 22:48:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_cluster_role_binding.admin": visit complete
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.database-password": visit complete
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.admin": visit complete
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_secret.database-username": visit complete
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_persistent_volume.storage-1": visit complete
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_service.storage": visit complete
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_persistent_volume.storage-2": visit complete
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_persistent_volume.storage-3": visit complete
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_stateful_set.database": visit complete
2021/01/05 22:48:35 [TRACE] vertex "kubernetes_stateful_set.storage": visit complete
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/01/05 22:48:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/01/05 22:48:35 [TRACE] GRPCProvider: Close
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/01/05 22:48:35 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/01/05 22:48:35 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-01-05T22:48:35.911+0100 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-01-05T22:48:35.913+0100 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 pid=85412
2021-01-05T22:48:35.914+0100 [DEBUG] plugin: plugin exited
2021/01/05 22:48:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "root"
2021/01/05 22:48:35 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/01/05 22:48:35 [TRACE] vertex "root": visit complete
2021/01/05 22:48:35 [INFO] backend/local: apply calling Plan
2021/01/05 22:48:35 [INFO] terraform: building graph: GraphTypePlan
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/01/05 22:48:35 [TRACE] ConfigTransformer: Starting for path: 
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/01/05 22:48:35 [TRACE] OutputTransformer: adding database_password as *terraform.NodeApplyableOutput
2021/01/05 22:48:35 [TRACE] OutputTransformer: adding storage_access_key as *terraform.NodeApplyableOutput
2021/01/05 22:48:35 [TRACE] OutputTransformer: adding storage_password as *terraform.NodeApplyableOutput
2021/01/05 22:48:35 [TRACE] OutputTransformer: adding database_username as *terraform.NodeApplyableOutput
2021/01/05 22:48:35 [TRACE] OutputTransformer: adding database_name as *terraform.NodeApplyableOutput
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.StateTransformer
2021/01/05 22:48:35 [TRACE] StateTransformer: state is empty, so nothing to do
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.storage-service (expand)" (*terraform.nodeExpandPlannableResource) config from 34_storage_service.tf:1,1-48
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.storage-service (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-3 (expand)" (*terraform.nodeExpandPlannableResource) config from 32_storage_volume.tf:69,1-52
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-3 (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_cluster_role_binding.admin (expand)" (*terraform.nodeExpandPlannableResource) config from 02_service_account.tf:22,1-51
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_cluster_role_binding.admin (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "random_password.storage (expand)" (*terraform.nodeExpandPlannableResource) config from 03_storage_secrets.tf:10,1-37
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to random_password.storage (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-1 (expand)" (*terraform.nodeExpandPlannableResource) config from 32_storage_volume.tf:24,1-52
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-1 (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-0 (expand)" (*terraform.nodeExpandPlannableResource) config from 32_storage_volume.tf:1,1-52
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-0 (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage-secret-key (expand)" (*terraform.nodeExpandPlannableResource) config from 03_storage_secrets.tf:43,1-50
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage-secret-key (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.database (expand)" (*terraform.nodeExpandPlannableResource) config from 23_database_service.tf:1,1-41
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.database (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.admin (expand)" (*terraform.nodeExpandPlannableResource) config from 02_service_account.tf:1,1-37
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.admin (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-name (expand)" (*terraform.nodeExpandPlannableResource) config from 03_database_secrets.tf:43,1-45
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-name (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-2 (expand)" (*terraform.nodeExpandPlannableResource) config from 32_storage_volume.tf:47,1-52
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-2 (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-username (expand)" (*terraform.nodeExpandPlannableResource) config from 03_database_secrets.tf:65,1-49
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-username (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_stateful_set.storage (expand)" (*terraform.nodeExpandPlannableResource) config from 33_storage_stateful_set.tf:1,1-45
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_stateful_set.storage (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage (expand)" (*terraform.nodeExpandPlannableResource) config from 03_storage_secrets.tf:21,1-39
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage-access-key (expand)" (*terraform.nodeExpandPlannableResource) config from 03_storage_secrets.tf:32,1-50
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage-access-key (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_stateful_set.database (expand)" (*terraform.nodeExpandPlannableResource) config from 22_database_stateful_set.tf:1,1-46
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_stateful_set.database (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.storage (expand)" (*terraform.nodeExpandPlannableResource) config from 31_storage_service.tf:1,1-40
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.storage (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-password (expand)" (*terraform.nodeExpandPlannableResource) config from 03_database_secrets.tf:54,1-49
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-password (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "random_password.database (expand)" (*terraform.nodeExpandPlannableResource) config from 03_database_secrets.tf:19,1-38
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to random_password.database (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database (expand)" (*terraform.nodeExpandPlannableResource) config from 03_database_secrets.tf:30,1-40
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.database-0 (expand)" (*terraform.nodeExpandPlannableResource) config from 21_database_volume.tf:1,1-53
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.database-0 (expand)
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service_account.admin (expand)" (*terraform.nodeExpandPlannableResource) config from 02_service_account.tf:12,1-46
2021/01/05 22:48:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service_account.admin (expand)
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/01/05 22:48:35 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/helm\"]" provider configuration from 00_providers.tf:1,1-16
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/helm"] - *terraform.NodeApplyableProvider
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/01/05 22:48:35 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/kubernetes"], implied first by kubernetes_secret.storage (expand)
2021/01/05 22:48:35 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/random"], implied first by random_password.database (expand)
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/helm"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.storage-service (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_service.storage-service (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-0 (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-0 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-1 (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-1 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-2 (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-2 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.admin (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.admin (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-username (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.database-username (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-password (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.database-password (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.database-0 (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.database-0 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-3 (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-3 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage-secret-key (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.storage-secret-key (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_stateful_set.storage (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_stateful_set.storage (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_stateful_set.database (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_stateful_set.database (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service_account.admin (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_service_account.admin (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.storage (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.database (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage-access-key (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.storage-access-key (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/random"] serving random_password.database (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "random_password.database (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/random"] serving random_password.storage (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "random_password.storage (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_cluster_role_binding.admin (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_cluster_role_binding.admin (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.database (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_service.database (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-name (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_secret.database-name (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.storage (expand)
2021/01/05 22:48:35 [DEBUG] ProviderTransformer: "kubernetes_service.storage (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/helm"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/01/05 22:48:35 [DEBUG] pruning unused provider["registry.terraform.io/hashicorp/helm"]
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/01/05 22:48:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-1 (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-0 (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage-secret-key (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.database (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-name (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-2 (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.admin (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-username (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_stateful_set.storage (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to random_password.database (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage-access-key (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_stateful_set.database (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.storage (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-password (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.database-0 (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service_account.admin (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_cluster_role_binding.admin (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to random_password.storage (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.storage-service (expand)
2021/01/05 22:48:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-3 (expand)
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-name (expand)" references: [var.database_name]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-2 (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.admin (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-username (expand)" references: [var.database_username]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_stateful_set.storage (expand)" references: [var.storage_access_key random_password.storage (expand)]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage (expand)" references: [var.storage_access_key random_password.storage (expand)]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-password (expand)" references: [random_password.database (expand)]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "output.storage_access_key" references: [var.storage_access_key]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "random_password.database (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.database (expand)" references: [var.database_username random_password.database (expand) var.database_name]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage-access-key (expand)" references: [var.storage_access_key]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_stateful_set.database (expand)" references: [var.database_username var.database_name random_password.database (expand)]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_service.storage (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/random\"]" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.database-0 (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_service_account.admin (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "var.database_username" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "var.storage_access_key" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "output.database_username" references: [var.database_username]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "output.database_name" references: [var.database_name]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_cluster_role_binding.admin (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "random_password.storage (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_service.storage-service (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-3 (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "output.storage_password" references: [random_password.storage (expand)]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-1 (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-0 (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "var.database_name" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage-secret-key (expand)" references: [random_password.storage (expand)]
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "kubernetes_service.database (expand)" references: []
2021/01/05 22:48:35 [DEBUG] ReferenceTransformer: "output.database_password" references: [random_password.database (expand)]
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.storage_access_key - *terraform.NodeRootVariable
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: random_password.database depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_secret.database depends on [random_password.database]
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_secret.storage-access-key depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_stateful_set.database depends on [random_password.database]
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_service.storage depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_secret.database-password depends on [random_password.database]
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_persistent_volume.database-0 depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_service_account.admin depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_cluster_role_binding.admin depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: random_password.storage depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_service.storage-service depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_persistent_volume.storage-3 depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_persistent_volume.storage-1 depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_persistent_volume.storage-0 depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_secret.storage-secret-key depends on [random_password.storage]
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_service.database depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_secret.database-name depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_persistent_volume.storage-2 depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_secret.admin depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_secret.database-username depends on []
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_stateful_set.storage depends on [random_password.storage]
2021/01/05 22:48:35 [TRACE] AttachDependenciesTransformer: kubernetes_secret.storage depends on [random_password.storage]
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_secret.storage-secret-key (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_service.database (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_secret.database-name (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_persistent_volume.storage-2 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_secret.admin (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_secret.database-username (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_stateful_set.storage (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_secret.storage (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "random_password.database (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_secret.database (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_secret.storage-access-key (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_stateful_set.database (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_service.storage (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_secret.database-password (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_persistent_volume.database-0 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_service_account.admin (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_cluster_role_binding.admin (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "random_password.storage (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_service.storage-service (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_persistent_volume.storage-3 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_persistent_volume.storage-1 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] ForcedCBDTransformer: "kubernetes_persistent_volume.storage-0 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.storage_access_key - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
    var.storage_access_key - *terraform.NodeRootVariable
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.storage_access_key - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
    var.storage_access_key - *terraform.NodeRootVariable
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.storage_access_key - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
    var.storage_access_key - *terraform.NodeRootVariable
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/01/05 22:48:35 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    var.storage_access_key - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
    random_password.database (expand) - *terraform.nodeExpandPlannableResource
    random_password.storage (expand) - *terraform.nodeExpandPlannableResource
  random_password.database (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:35 [DEBUG] Starting graph walk: walkPlan
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "var.database_username"
2021/01/05 22:48:35 [TRACE] vertex "var.database_username": starting visit (*terraform.NodeRootVariable)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "var.storage_access_key"
2021/01/05 22:48:35 [TRACE] vertex "var.storage_access_key": starting visit (*terraform.NodeRootVariable)
2021/01/05 22:48:35 [TRACE] vertex "var.database_username": visit complete
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "var.database_name"
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/random\"]"
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "output.database_username"
2021/01/05 22:48:35 [TRACE] vertex "output.database_username": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"]": starting visit (*terraform.NodeApplyableProvider)
2021/01/05 22:48:35 [TRACE] vertex "var.storage_access_key": visit complete
2021/01/05 22:48:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021/01/05 22:48:35 [TRACE] vertex "var.database_name": starting visit (*terraform.NodeRootVariable)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "output.storage_access_key"
2021/01/05 22:48:35 [TRACE] vertex "var.database_name": visit complete
2021/01/05 22:48:35 [TRACE] vertex "output.storage_access_key": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:35 [TRACE] dag/walk: visiting "output.database_name"
2021/01/05 22:48:35 [TRACE] vertex "output.database_name": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:35 [TRACE] ExecuteWriteOutput: Saving Create change for output.database_username in changeset
2021/01/05 22:48:35 [TRACE] EvalWriteOutput: Saving value for output.database_username in state
2021/01/05 22:48:35 [TRACE] ExecuteWriteOutput: Saving Create change for output.database_username in changeset
2021/01/05 22:48:35 [TRACE] EvalWriteOutput: Saving value for output.database_username in state
2021/01/05 22:48:35 [TRACE] ExecuteWriteOutput: Saving Create change for output.storage_access_key in changeset
2021/01/05 22:48:35 [TRACE] EvalWriteOutput: Saving value for output.storage_access_key in state
2021/01/05 22:48:35 [TRACE] ExecuteWriteOutput: Saving Create change for output.database_name in changeset
2021/01/05 22:48:35 [TRACE] ExecuteWriteOutput: Saving Create change for output.storage_access_key in changeset
2021/01/05 22:48:35 [TRACE] EvalWriteOutput: Saving value for output.database_name in state
2021/01/05 22:48:35 [TRACE] vertex "output.database_username": visit complete
2021/01/05 22:48:35 [TRACE] ExecuteWriteOutput: Saving Create change for output.database_name in changeset
2021/01/05 22:48:35 [TRACE] EvalWriteOutput: Saving value for output.database_name in state
2021/01/05 22:48:35 [TRACE] vertex "output.database_name": visit complete
2021/01/05 22:48:35 [TRACE] EvalWriteOutput: Saving value for output.storage_access_key in state
2021/01/05 22:48:35 [TRACE] vertex "output.storage_access_key": visit complete
2021-01-05T22:48:35.920+0100 [INFO]  plugin: configuring client automatic mTLS
2021-01-05T22:48:35.945+0100 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5]
2021-01-05T22:48:35.950+0100 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 pid=85413
2021-01-05T22:48:35.950+0100 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5
2021-01-05T22:48:35.971+0100 [INFO]  plugin.terraform-provider-random_v3.0.0_x5: configuring server automatic mTLS: timestamp=2021-01-05T22:48:35.970+0100
2021-01-05T22:48:35.997+0100 [DEBUG] plugin.terraform-provider-random_v3.0.0_x5: plugin address: address=/var/folders/ry/fr4q9mg93gn8zzz2cr3w5xxr0000gn/T/plugin498381696 network=unix timestamp=2021-01-05T22:48:35.997+0100
2021-01-05T22:48:35.997+0100 [DEBUG] plugin: using plugin: version=5
2021/01/05 22:48:36 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/random\"]" provider for provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:36 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/random"]: no configuration at all
2021/01/05 22:48:36 [TRACE] GRPCProvider: GetSchema
2021-01-05T22:48:36.051+0100 [TRACE] plugin.stdio: waiting for stdio data
2021-01-05T22:48:36.052+0100 [INFO]  plugin: configuring client automatic mTLS
2021-01-05T22:48:36.078+0100 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4]
2021-01-05T22:48:36.084+0100 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 pid=85414
2021-01-05T22:48:36.084+0100 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4
2021-01-05T22:48:36.120+0100 [INFO]  plugin.terraform-provider-kubernetes_v1.13.3_x4: configuring server automatic mTLS: timestamp=2021-01-05T22:48:36.120+0100
2021-01-05T22:48:36.148+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: plugin address: address=/var/folders/ry/fr4q9mg93gn8zzz2cr3w5xxr0000gn/T/plugin244124053 network=unix timestamp=2021-01-05T22:48:36.148+0100
2021-01-05T22:48:36.148+0100 [DEBUG] plugin: using plugin: version=5
2021-01-05T22:48:36.202+0100 [TRACE] plugin.stdio: waiting for stdio data
2021/01/05 22:48:36 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:36 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: no configuration at all
2021/01/05 22:48:36 [TRACE] GRPCProvider: GetSchema
2021/01/05 22:48:36 [TRACE] GRPCProvider: Configure
2021/01/05 22:48:36 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"]": visit complete
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "random_password.storage (expand)"
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "random_password.storage"
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "random_password.database (expand)"
2021/01/05 22:48:36 [TRACE] vertex "random_password.database (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "random_password.database (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding random_password.storage as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  random_password.storage - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "random_password.storage", instance random_password.storage
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "random_password.storage" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "random_password.storage"
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] vertex "random_password.database (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "random_password.database"
2021/01/05 22:48:36 [TRACE] vertex "random_password.database": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for random_password.storage
2021/01/05 22:48:36 [TRACE] vertex "random_password.database": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for random_password.storage
2021/01/05 22:48:36 [DEBUG] refresh: random_password.storage: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for random_password.storage
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding random_password.database as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for random_password.storage
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  random_password.database - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "random_password.database", instance random_password.database
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "random_password.database" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "random_password.database": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "random_password.database"
2021/01/05 22:48:36 [TRACE] vertex "random_password.database": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] Re-validating config for "random_password.storage"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for random_password.database
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for random_password.database
2021/01/05 22:48:36 [DEBUG] refresh: random_password.database: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for random_password.database
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for random_password.database
2021/01/05 22:48:36 [TRACE] Re-validating config for "random_password.database"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/random" produced an invalid plan for random_password.storage, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .min_numeric: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_upper: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .upper: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .min_lower: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .lower: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .min_special: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .number: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for random_password.storage
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/random" produced an invalid plan for random_password.database, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .lower: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .min_special: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .number: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .min_upper: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .upper: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .min_lower: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_numeric: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for random_password.database
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for random_password.storage
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage": visit complete
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for random_password.database
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage": visit complete
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "random_password.storage (expand)": visit complete
2021/01/05 22:48:36 [TRACE] vertex "random_password.database": visit complete
2021/01/05 22:48:36 [TRACE] vertex "random_password.database": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "random_password.database": visit complete
2021/01/05 22:48:36 [TRACE] vertex "random_password.database (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "random_password.database (expand)": visit complete
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "output.storage_password"
2021/01/05 22:48:36 [TRACE] vertex "output.storage_password": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/random\"] (close)"
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "output.database_password"
2021/01/05 22:48:36 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/01/05 22:48:36 [TRACE] vertex "output.database_password": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:36 [TRACE] GRPCProvider: Close
2021/01/05 22:48:36 [TRACE] ExecuteWriteOutput: Saving Create change for output.storage_password in changeset
2021/01/05 22:48:36 [TRACE] ExecuteWriteOutput: Saving Create change for output.database_password in changeset
2021/01/05 22:48:36 [TRACE] EvalWriteOutput: Removing output.database_password from state (it is now null)
2021/01/05 22:48:36 [TRACE] vertex "output.database_password": visit complete
2021/01/05 22:48:36 [TRACE] EvalWriteOutput: Removing output.storage_password from state (it is now null)
2021/01/05 22:48:36 [TRACE] vertex "output.storage_password": visit complete
2021-01-05T22:48:36.205+0100 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-01-05T22:48:36.206+0100 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 pid=85413
2021-01-05T22:48:36.207+0100 [DEBUG] plugin: plugin exited
2021/01/05 22:48:36 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"] (close)": visit complete
2021/01/05 22:48:36 [TRACE] No provider meta schema returned
2021/01/05 22:48:36 [TRACE] GRPCProvider: Configure
2021-01-05T22:48:36.267+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:36 [DEBUG] Trying to load configuration from file
2021-01-05T22:48:36.267+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:36 [DEBUG] Configuration file is: /Users/e8kor/.kube/config
2021-01-05T22:48:36.268+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:36 [INFO] Successfully initialized config
2021/01/05 22:48:36 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_stateful_set.storage (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_stateful_set.database (expand)"
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database-username (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-1 (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_cluster_role_binding.admin (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.admin (expand)"
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.storage-access-key (expand)"
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service.storage-service (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-0 (expand)"
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.storage (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-3 (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.storage-access-key"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.storage"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database-name (expand)"
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service_account.admin (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service.database (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.storage-secret-key (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1 (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.database-0 (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service_account.admin"
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service.storage (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3 (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database-username"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0 (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database-password (expand)"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_secret.storage as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-2 (expand)"
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.storage - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_secret.storage", instance kubernetes_secret.storage
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2 (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_cluster_role_binding.admin"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0 (expand)": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [INFO] ReferenceTransformer: reference not found: "var.storage_access_key"
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.storage"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service.database"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_secret.storage
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_secret.storage
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_secret.storage: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_secret.storage
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_secret.storage
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.storage-secret-key"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_stateful_set.database"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_service.database as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.database - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_service.database", instance kubernetes_service.database
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_service.database" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service.database"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1 (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-1"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.database
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.database
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_persistent_volume.storage-1 as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_persistent_volume.storage-1 - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_persistent_volume.storage-1", instance kubernetes_persistent_volume.storage-1
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_secret.storage"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_service.database: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.database
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_service.database
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-1" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-1"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_persistent_volume.storage-1: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service.storage-service"
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_service.storage-service as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.storage-service - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_service.storage-service", instance kubernetes_service.storage-service
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_service.storage-service" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service.storage-service"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_service.database"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_secret.storage-access-key as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.storage-access-key - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.storage-service
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_secret.storage-access-key", instance kubernetes_secret.storage-access-key
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [INFO] ReferenceTransformer: reference not found: "var.storage_access_key"
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage-access-key" references: []
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.storage-service
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.storage-access-key"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_secret.storage-secret-key as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.storage-secret-key - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_service.storage-service: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.storage-service
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_service.storage-service
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_secret.storage-secret-key", instance kubernetes_secret.storage-secret-key
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage-secret-key" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.storage-secret-key"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_persistent_volume.storage-1"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_secret.storage-secret-key
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_secret.storage-secret-key
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_secret.storage-secret-key: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_secret.storage-secret-key
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_secret.storage-secret-key
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service.storage"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_service.storage as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.storage - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_service.storage", instance kubernetes_service.storage
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_service.storage" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_service.storage-service"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service.storage"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.storage
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_secret.storage-access-key
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_secret.storage-access-key
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_secret.storage-access-key: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_secret.storage-access-key
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_secret.storage-access-key
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_stateful_set.storage"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3 (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-3"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_secret.database-username as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.database-username - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_secret.database-username", instance kubernetes_secret.database-username
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [INFO] ReferenceTransformer: reference not found: "var.database_username"
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-username" references: []
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_secret.storage-access-key"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.admin"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_secret.storage-secret-key"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0 (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-0"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database-name"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database-password"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2 (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-2"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0 (expand)": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.database-0"
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0": starting visit (*terraform.NodePlannableResource)
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.storage
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username": entering dynamic subgraph
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_service.storage: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.storage
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_service.storage
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database-username"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_service_account.admin as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service_account.admin - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_service_account.admin", instance kubernetes_service_account.admin
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_service_account.admin" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_service_account.admin"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_stateful_set.storage as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_stateful_set.storage - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_stateful_set.storage", instance kubernetes_stateful_set.storage
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_service.storage"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.storage, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
      - .data: sensitive planned value does not match config value
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:36 [INFO] ReferenceTransformer: reference not found: "var.storage_access_key"
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_stateful_set.storage" references: []
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.storage
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_stateful_set.storage"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_stateful_set.database as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_stateful_set.database - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_stateful_set.database", instance kubernetes_stateful_set.database
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [INFO] ReferenceTransformer: reference not found: "var.database_username"
2021/01/05 22:48:36 [INFO] ReferenceTransformer: reference not found: "var.database_name"
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_stateful_set.database" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_stateful_set.database"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_cluster_role_binding.admin as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_cluster_role_binding.admin", instance kubernetes_cluster_role_binding.admin
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_cluster_role_binding.admin" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_cluster_role_binding.admin"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_secret.storage
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage (expand)": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_persistent_volume.storage-3 as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_persistent_volume.storage-3 - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_persistent_volume.storage-3", instance kubernetes_persistent_volume.storage-3
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-3" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-3"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_persistent_volume.storage-0 as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_persistent_volume.storage-0 - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_persistent_volume.storage-0", instance kubernetes_persistent_volume.storage-0
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-0" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-0"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_secret.database-password as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.database-password - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_secret.database-password", instance kubernetes_secret.database-password
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-password" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database-password"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_secret.database as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.database - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_secret.database", instance kubernetes_secret.database
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [INFO] ReferenceTransformer: reference not found: "var.database_username"
2021/01/05 22:48:36 [INFO] ReferenceTransformer: reference not found: "var.database_name"
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_secret.database" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_persistent_volume.database-0 as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_persistent_volume.database-0 - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_secret.database-username
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_persistent_volume.database-0", instance kubernetes_persistent_volume.database-0
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.storage-secret-key, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
      - .data: sensitive planned value does not match config value
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.storage-secret-key
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.database-0" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.database-0"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.storage-access-key, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.storage-access-key
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.database, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].type: planned value cty.StringVal("ClusterIP") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_service.database
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_secret.database-username
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_secret.database-username: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_secret.database-username
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_secret.database-username
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_secret.database-username"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_secret.storage-access-key
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-access-key (expand)": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_secret.database-name as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.database-name - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_secret.database-name", instance kubernetes_secret.database-name
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [INFO] ReferenceTransformer: reference not found: "var.database_name"
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-name" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.database-name"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service_account.admin
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service_account.admin
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_service_account.admin: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_service_account.admin
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_service_account.admin
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_service_account.admin"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.storage, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].type: planned value cty.StringVal("ClusterIP") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_service.storage
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.database
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.database (expand)": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_secret.admin as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.admin - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_secret.admin", instance kubernetes_secret.admin
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_secret.admin" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_secret.admin"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_stateful_set.storage
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_stateful_set.storage
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_stateful_set.storage: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_stateful_set.storage
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_stateful_set.storage
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_stateful_set.database
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_stateful_set.database
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_stateful_set.database: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_stateful_set.database
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_stateful_set.database
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_cluster_role_binding.admin: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_cluster_role_binding.admin"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_secret.storage-secret-key
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.storage-secret-key (expand)": visit complete
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.storage
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage (expand)": visit complete
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_persistent_volume.storage-0: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_persistent_volume.storage-0"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_secret.database-password
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_secret.database-password
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_secret.database-password: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_secret.database-password
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_secret.database-password
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_secret.database-password"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_stateful_set.storage"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_stateful_set.database"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2": expanding dynamic subgraph
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/05 22:48:36 [TRACE] ResourceCountTransformer: adding kubernetes_persistent_volume.storage-2 as *terraform.NodePlannableResourceInstance
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_persistent_volume.storage-2 - *terraform.NodePlannableResourceInstance
  ------
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:36 [DEBUG] Resource instance state not found for node "kubernetes_persistent_volume.storage-2", instance kubernetes_persistent_volume.storage-2
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:36 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-2" references: []
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/05 22:48:36 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/05 22:48:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2": entering dynamic subgraph
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-2"
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_persistent_volume.storage-3: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_persistent_volume.storage-3"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.database-password, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .data: sensitive planned value does not match config value
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database-password
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_secret.database-password
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-password (expand)": visit complete
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_secret.database
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_secret.database
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_secret.database: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_secret.database
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_secret.database
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_secret.database"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_service_account.admin
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service_account.admin
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service_account.admin (expand)": visit complete
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.database-username, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database-username
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_secret.database-username
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-username (expand)": visit complete
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_cluster_role_binding.admin (expand)": visit complete
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.storage-service, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_service.storage-service
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.storage-service
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_service.storage-service (expand)": visit complete
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_persistent_volume.database-0
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_persistent_volume.database-0
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_persistent_volume.database-0: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_persistent_volume.database-0
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_persistent_volume.database-0
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_persistent_volume.database-0"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_secret.database-name
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_secret.database-name
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_secret.database-name: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_secret.database-name
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_secret.database-name
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_secret.database-name"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_secret.admin
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_secret.admin
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_secret.admin: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_secret.admin
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_secret.admin
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_secret.admin"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:36 [TRACE] ReadResourceInstanceState: no state present for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:36 [DEBUG] refresh: kubernetes_persistent_volume.storage-2: no state, so not refreshing
2021/01/05 22:48:36 [TRACE] EvalWriteState: using RefreshState for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:36 [TRACE] EvalWriteState: removing state object for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:36 [TRACE] Re-validating config for "kubernetes_persistent_volume.storage-2"
2021/01/05 22:48:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.database, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .data: sensitive planned value does not match config value
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_secret.database
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database (expand)": visit complete
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.admin
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_secret.admin
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.admin (expand)": visit complete
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_persistent_volume.storage-3, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].volume_mode: planned value cty.StringVal("Filesystem") does not match config value cty.NullVal(cty.String)
      - .spec[0].node_affinity: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3 (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-3 (expand)": visit complete
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_persistent_volume.storage-0, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].volume_mode: planned value cty.StringVal("Filesystem") does not match config value cty.NullVal(cty.String)
      - .spec[0].node_affinity: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_persistent_volume.storage-2, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].volume_mode: planned value cty.StringVal("Filesystem") does not match config value cty.NullVal(cty.String)
      - .spec[0].node_affinity: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0 (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-0 (expand)": visit complete
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2 (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-2 (expand)": visit complete
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.database-name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database-name
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_secret.database-name
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_secret.database-name (expand)": visit complete
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_persistent_volume.database-0, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].volume_mode: planned value cty.StringVal("Filesystem") does not match config value cty.NullVal(cty.String)
      - .spec[0].node_affinity: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.database-0
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_persistent_volume.database-0
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0 (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.database-0 (expand)": visit complete
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_persistent_volume.storage-1, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].volume_mode: planned value cty.StringVal("Filesystem") does not match config value cty.NullVal(cty.String)
      - .spec[0].node_affinity: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1 (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_persistent_volume.storage-1 (expand)": visit complete
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_stateful_set.storage, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].metadata[0].annotations: planned value cty.NullVal(cty.Map(cty.String)) does not match config value cty.MapValEmpty(cty.String)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].volume_mount[0].read_only: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].volume_mount[0].mount_propagation: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].resources: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].volume_claim_template[0].metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_stateful_set.storage
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_stateful_set.storage
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.storage (expand)": visit complete
2021/01/05 22:48:36 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_stateful_set.database, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].metadata[0].annotations: planned value cty.NullVal(cty.Map(cty.String)) does not match config value cty.MapValEmpty(cty.String)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].resources: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].volume_mount[0].mount_propagation: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount[0].read_only: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].volume_claim_template[0].metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:36 [TRACE] EvalWriteState: writing current state object for kubernetes_stateful_set.database
2021/01/05 22:48:36 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_stateful_set.database
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database": visit complete
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:36 [TRACE] vertex "kubernetes_stateful_set.database (expand)": visit complete
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/01/05 22:48:36 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/01/05 22:48:36 [TRACE] GRPCProvider: Close
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/01/05 22:48:36 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/01/05 22:48:36 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-01-05T22:48:36.489+0100 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-01-05T22:48:36.492+0100 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 pid=85414
2021-01-05T22:48:36.492+0100 [DEBUG] plugin: plugin exited
2021/01/05 22:48:36 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/01/05 22:48:36 [TRACE] dag/walk: visiting "root"
2021/01/05 22:48:36 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/01/05 22:48:36 [TRACE] vertex "root": visit complete
2021/01/05 22:48:36 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/01/05 22:48:38 [INFO] backend/local: apply calling Apply
2021/01/05 22:48:38 [INFO] terraform: building graph: GraphTypeApply
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/01/05 22:48:38 [TRACE] ConfigTransformer: Starting for path: 
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/01/05 22:48:38 [TRACE] OutputTransformer: adding database_username as *terraform.NodeApplyableOutput
2021/01/05 22:48:38 [TRACE] OutputTransformer: adding database_name as *terraform.NodeApplyableOutput
2021/01/05 22:48:38 [TRACE] OutputTransformer: adding database_password as *terraform.NodeApplyableOutput
2021/01/05 22:48:38 [TRACE] OutputTransformer: adding storage_access_key as *terraform.NodeApplyableOutput
2021/01/05 22:48:38 [TRACE] OutputTransformer: adding storage_password as *terraform.NodeApplyableOutput
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/01/05 22:48:38 [TRACE] DiffTransformer starting
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for random_password.storage 
2021/01/05 22:48:38 [TRACE] DiffTransformer: random_password.storage will be represented by random_password.storage
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for random_password.database 
2021/01/05 22:48:38 [TRACE] DiffTransformer: random_password.database will be represented by random_password.database
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_secret.storage 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_secret.storage will be represented by kubernetes_secret.storage
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_secret.storage-access-key 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_secret.storage-access-key will be represented by kubernetes_secret.storage-access-key
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_service.database 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_service.database will be represented by kubernetes_service.database
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_secret.storage-secret-key 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_secret.storage-secret-key will be represented by kubernetes_secret.storage-secret-key
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_service.storage 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_service.storage will be represented by kubernetes_service.storage
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_secret.database-password 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_secret.database-password will be represented by kubernetes_secret.database-password
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_service_account.admin 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_service_account.admin will be represented by kubernetes_service_account.admin
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_secret.database-username 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_secret.database-username will be represented by kubernetes_secret.database-username
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_cluster_role_binding.admin 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_cluster_role_binding.admin will be represented by kubernetes_cluster_role_binding.admin
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_service.storage-service 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_service.storage-service will be represented by kubernetes_service.storage-service
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_secret.database 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_secret.database will be represented by kubernetes_secret.database
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_secret.admin 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_secret.admin will be represented by kubernetes_secret.admin
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_persistent_volume.storage-3 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_persistent_volume.storage-3 will be represented by kubernetes_persistent_volume.storage-3
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_persistent_volume.storage-0 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_persistent_volume.storage-0 will be represented by kubernetes_persistent_volume.storage-0
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_persistent_volume.storage-2 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_persistent_volume.storage-2 will be represented by kubernetes_persistent_volume.storage-2
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_secret.database-name 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_secret.database-name will be represented by kubernetes_secret.database-name
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_persistent_volume.database-0 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_persistent_volume.database-0 will be represented by kubernetes_persistent_volume.database-0
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_persistent_volume.storage-1 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_persistent_volume.storage-1 will be represented by kubernetes_persistent_volume.storage-1
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_stateful_set.storage 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_stateful_set.storage will be represented by kubernetes_stateful_set.storage
2021/01/05 22:48:38 [TRACE] DiffTransformer: found Create change for kubernetes_stateful_set.database 
2021/01/05 22:48:38 [TRACE] DiffTransformer: kubernetes_stateful_set.database will be represented by kubernetes_stateful_set.database
2021/01/05 22:48:38 [TRACE] DiffTransformer complete
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_secret.storage", instance kubernetes_secret.storage
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_cluster_role_binding.admin", instance kubernetes_cluster_role_binding.admin
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_service_account.admin", instance kubernetes_service_account.admin
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "random_password.database", instance random_password.database
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_secret.database-username", instance kubernetes_secret.database-username
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_service.storage-service", instance kubernetes_service.storage-service
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_persistent_volume.storage-3", instance kubernetes_persistent_volume.storage-3
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_persistent_volume.storage-0", instance kubernetes_persistent_volume.storage-0
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_service.database", instance kubernetes_service.database
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_service.storage", instance kubernetes_service.storage
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_persistent_volume.storage-2", instance kubernetes_persistent_volume.storage-2
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "random_password.storage", instance random_password.storage
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_secret.database-password", instance kubernetes_secret.database-password
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_secret.admin", instance kubernetes_secret.admin
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_secret.database", instance kubernetes_secret.database
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_persistent_volume.storage-1", instance kubernetes_persistent_volume.storage-1
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_secret.database-name", instance kubernetes_secret.database-name
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_persistent_volume.database-0", instance kubernetes_persistent_volume.database-0
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_secret.storage-secret-key", instance kubernetes_secret.storage-secret-key
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_stateful_set.storage", instance kubernetes_stateful_set.storage
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_stateful_set.database", instance kubernetes_stateful_set.database
2021/01/05 22:48:38 [DEBUG] Resource state not found for node "kubernetes_secret.storage-access-key", instance kubernetes_secret.storage-access-key
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_stateful_set.storage (expand)" (*terraform.nodeExpandApplyableResource) config from 33_storage_stateful_set.tf:1,1-45
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_stateful_set.storage (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "random_password.database" (*terraform.NodeApplyableResourceInstance) config from 03_database_secrets.tf:19,1-38
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to random_password.database
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service_account.admin" (*terraform.NodeApplyableResourceInstance) config from 02_service_account.tf:12,1-46
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service_account.admin
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-0" (*terraform.NodeApplyableResourceInstance) config from 32_storage_volume.tf:1,1-52
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-0
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-name (expand)" (*terraform.nodeExpandApplyableResource) config from 03_database_secrets.tf:43,1-45
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-name (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage (expand)" (*terraform.nodeExpandApplyableResource) config from 03_storage_secrets.tf:21,1-39
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "random_password.database (expand)" (*terraform.nodeExpandApplyableResource) config from 03_database_secrets.tf:19,1-38
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to random_password.database (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage-secret-key (expand)" (*terraform.nodeExpandApplyableResource) config from 03_storage_secrets.tf:43,1-50
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage-secret-key (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-username" (*terraform.NodeApplyableResourceInstance) config from 03_database_secrets.tf:65,1-49
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-username
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.storage-service" (*terraform.NodeApplyableResourceInstance) config from 34_storage_service.tf:1,1-48
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.storage-service
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-3" (*terraform.NodeApplyableResourceInstance) config from 32_storage_volume.tf:69,1-52
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-3
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-username (expand)" (*terraform.nodeExpandApplyableResource) config from 03_database_secrets.tf:65,1-49
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-username (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-0 (expand)" (*terraform.nodeExpandApplyableResource) config from 32_storage_volume.tf:1,1-52
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-0 (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "random_password.storage" (*terraform.NodeApplyableResourceInstance) config from 03_storage_secrets.tf:10,1-37
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to random_password.storage
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.database" (*terraform.NodeApplyableResourceInstance) config from 23_database_service.tf:1,1-41
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.database
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.storage" (*terraform.NodeApplyableResourceInstance) config from 31_storage_service.tf:1,1-40
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.storage
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-2" (*terraform.NodeApplyableResourceInstance) config from 32_storage_volume.tf:47,1-52
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-2
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.admin" (*terraform.NodeApplyableResourceInstance) config from 02_service_account.tf:1,1-37
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.admin
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_cluster_role_binding.admin (expand)" (*terraform.nodeExpandApplyableResource) config from 02_service_account.tf:22,1-51
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_cluster_role_binding.admin (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-2 (expand)" (*terraform.nodeExpandApplyableResource) config from 32_storage_volume.tf:47,1-52
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-2 (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.storage (expand)" (*terraform.nodeExpandApplyableResource) config from 31_storage_service.tf:1,1-40
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.storage (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-3 (expand)" (*terraform.nodeExpandApplyableResource) config from 32_storage_volume.tf:69,1-52
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-3 (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-password" (*terraform.NodeApplyableResourceInstance) config from 03_database_secrets.tf:54,1-49
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-password
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.storage-service (expand)" (*terraform.nodeExpandApplyableResource) config from 34_storage_service.tf:1,1-48
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.storage-service (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage-access-key (expand)" (*terraform.nodeExpandApplyableResource) config from 03_storage_secrets.tf:32,1-50
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage-access-key (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.admin (expand)" (*terraform.nodeExpandApplyableResource) config from 02_service_account.tf:1,1-37
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.admin (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service_account.admin (expand)" (*terraform.nodeExpandApplyableResource) config from 02_service_account.tf:12,1-46
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service_account.admin (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database" (*terraform.NodeApplyableResourceInstance) config from 03_database_secrets.tf:30,1-40
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-1" (*terraform.NodeApplyableResourceInstance) config from 32_storage_volume.tf:24,1-52
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-1
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "random_password.storage (expand)" (*terraform.nodeExpandApplyableResource) config from 03_storage_secrets.tf:10,1-37
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to random_password.storage (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.storage-1 (expand)" (*terraform.nodeExpandApplyableResource) config from 32_storage_volume.tf:24,1-52
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.storage-1 (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database (expand)" (*terraform.nodeExpandApplyableResource) config from 03_database_secrets.tf:30,1-40
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-name" (*terraform.NodeApplyableResourceInstance) config from 03_database_secrets.tf:43,1-45
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-name
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.database-0" (*terraform.NodeApplyableResourceInstance) config from 21_database_volume.tf:1,1-53
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.database-0
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_stateful_set.database (expand)" (*terraform.nodeExpandApplyableResource) config from 22_database_stateful_set.tf:1,1-46
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_stateful_set.database (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.database (expand)" (*terraform.nodeExpandApplyableResource) config from 23_database_service.tf:1,1-41
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.database (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage-access-key" (*terraform.NodeApplyableResourceInstance) config from 03_storage_secrets.tf:32,1-50
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage-access-key
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage-secret-key" (*terraform.NodeApplyableResourceInstance) config from 03_storage_secrets.tf:43,1-50
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage-secret-key
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_stateful_set.storage" (*terraform.NodeApplyableResourceInstance) config from 33_storage_stateful_set.tf:1,1-45
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_stateful_set.storage
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_stateful_set.database" (*terraform.NodeApplyableResourceInstance) config from 22_database_stateful_set.tf:1,1-46
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_stateful_set.database
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume.database-0 (expand)" (*terraform.nodeExpandApplyableResource) config from 21_database_volume.tf:1,1-53
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_persistent_volume.database-0 (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.database-password (expand)" (*terraform.nodeExpandApplyableResource) config from 03_database_secrets.tf:54,1-49
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.database-password (expand)
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.storage" (*terraform.NodeApplyableResourceInstance) config from 03_storage_secrets.tf:21,1-39
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_secret.storage
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_cluster_role_binding.admin" (*terraform.NodeApplyableResourceInstance) config from 02_service_account.tf:22,1-51
2021/01/05 22:48:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_cluster_role_binding.admin
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/01/05 22:48:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/01/05 22:48:38 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/helm\"]" provider configuration from 00_providers.tf:1,1-16
2021/01/05 22:48:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/helm"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/01/05 22:48:38 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/kubernetes"], implied first by kubernetes_secret.database-name (expand)
2021/01/05 22:48:38 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/random"], implied first by random_password.storage
2021/01/05 22:48:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/helm"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage-secret-key
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.storage-secret-key" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_stateful_set.database
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_stateful_set.database" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_cluster_role_binding.admin
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_cluster_role_binding.admin" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.database
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_service.database" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-0
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-0" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-username (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.database-username (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.storage-service (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_service.storage-service (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.database" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.storage-service
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_service.storage-service" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-0 (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-0 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.storage (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_service.storage (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage-access-key (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.storage-access-key (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-3 (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-3 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-name
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.database-name" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.storage" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-name (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.database-name (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_stateful_set.database (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_stateful_set.database (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.admin (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.admin (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage-secret-key (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.storage-secret-key (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/random"] serving random_password.storage (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "random_password.storage (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.database-0 (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.database-0 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-3
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-3" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_cluster_role_binding.admin (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_cluster_role_binding.admin (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.database (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_stateful_set.storage
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_stateful_set.storage" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.database (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_service.database (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-2
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-2" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_stateful_set.storage (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_stateful_set.storage (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service_account.admin
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_service_account.admin" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service_account.admin (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_service_account.admin (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage-access-key
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.storage-access-key" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.storage (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.storage (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/random"] serving random_password.storage
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "random_password.storage" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-password
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.database-password" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-1
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-1" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.admin
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.admin" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-1 (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-1 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-username
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.database-username" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.storage
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_service.storage" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.database-0
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.database-0" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_secret.database-password (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_secret.database-password (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/random"] serving random_password.database
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "random_password.database" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/random"] serving random_password.database (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "random_password.database (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_persistent_volume.storage-2 (expand)
2021/01/05 22:48:38 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume.storage-2 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/helm"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/01/05 22:48:38 [DEBUG] pruning unused provider["registry.terraform.io/hashicorp/helm"]
2021/01/05 22:48:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/01/05 22:48:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  output.database_name - *terraform.NodeApplyableOutput
  output.database_password - *terraform.NodeApplyableOutput
  output.database_username - *terraform.NodeApplyableOutput
  output.storage_access_key - *terraform.NodeApplyableOutput
  output.storage_password - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to random_password.storage (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-1 (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-name
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.database-0
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage-access-key
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage-secret-key
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_stateful_set.storage
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_stateful_set.database
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.database-0 (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_cluster_role_binding.admin
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_stateful_set.storage (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service_account.admin
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-name (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-username
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.storage-service
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-3
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-0 (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to random_password.storage
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.database
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.storage
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.storage (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-password
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage-access-key (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.admin (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service_account.admin (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-1
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_stateful_set.database (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.database (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-password (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to random_password.database
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-0
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to random_password.database (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.storage-secret-key (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database-username (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-2
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_cluster_role_binding.admin (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-2 (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume.storage-3 (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.admin
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.storage-service (expand)
2021/01/05 22:48:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.database
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "output.database_username" references: [var.database_username]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage-access-key" references: [var.storage_access_key]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage-secret-key" references: [random_password.storage random_password.storage random_password.storage (expand)]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_stateful_set.storage" references: [var.storage_access_key random_password.storage random_password.storage random_password.storage (expand)]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_stateful_set.database" references: [var.database_username var.database_name random_password.database random_password.database random_password.database (expand)]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.database-0 (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage" references: [var.storage_access_key random_password.storage random_password.storage random_password.storage (expand)]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_cluster_role_binding.admin" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_stateful_set.storage (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "output.storage_access_key" references: [var.storage_access_key]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "output.storage_password" references: [random_password.storage random_password.storage random_password.storage (expand)]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_service_account.admin" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-name (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-username" references: [var.database_username]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_service.storage-service" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-3" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-0 (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "var.database_name" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "random_password.storage" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_service.database" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_service.storage" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_service.storage (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-password" references: [random_password.database random_password.database random_password.database (expand)]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage-access-key (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.admin (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_service_account.admin (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-1" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/random\"]" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_stateful_set.database (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_service.database (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-password (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "random_password.database" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "random_password.database (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.storage-secret-key (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-0" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-username (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-2" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_cluster_role_binding.admin (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-2 (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-3 (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "var.storage_access_key" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "output.database_name" references: [var.database_name]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.admin" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_service.storage-service (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.database" references: [var.database_username random_password.database random_password.database random_password.database (expand) var.database_name]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "random_password.storage (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.storage-1 (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.database (expand)" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "var.database_username" references: []
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "output.database_password" references: [random_password.database random_password.database random_password.database (expand)]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.database-name" references: [var.database_name]
2021/01/05 22:48:38 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume.database-0" references: []
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_secret.database-password depends on [random_password.database]
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_persistent_volume.storage-1 depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: random_password.database depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_persistent_volume.storage-0 depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_persistent_volume.storage-2 depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_secret.admin depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_secret.database depends on [random_password.database]
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_secret.database-name depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_persistent_volume.database-0 depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_secret.storage-access-key depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_secret.storage-secret-key depends on [random_password.storage]
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_stateful_set.storage depends on [random_password.storage]
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_stateful_set.database depends on [random_password.database]
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_secret.storage depends on [random_password.storage]
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_cluster_role_binding.admin depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_service_account.admin depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_service.storage-service depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_persistent_volume.storage-3 depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_secret.database-username depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: random_password.storage depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_service.database depends on []
2021/01/05 22:48:38 [TRACE] AttachDependenciesTransformer: kubernetes_service.storage depends on []
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_persistent_volume.storage-2" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_secret.admin" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_secret.database" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_secret.database-name" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_persistent_volume.database-0" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_stateful_set.storage" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_stateful_set.database" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_secret.storage-access-key" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_secret.storage-secret-key" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_cluster_role_binding.admin" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_secret.storage" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_service_account.admin" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_secret.database-username" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_service.storage-service" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_persistent_volume.storage-3" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_service.database" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_service.storage" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "random_password.storage" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_secret.database-password" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_persistent_volume.storage-1" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "random_password.database" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] ForcedCBDTransformer: "kubernetes_persistent_volume.storage-0" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
    var.storage_access_key - *terraform.NodeRootVariable
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.database - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
    var.storage_access_key - *terraform.NodeRootVariable
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.database - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
    var.storage_access_key - *terraform.NodeRootVariable
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
    random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.database - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/01/05 22:48:38 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_cluster_role_binding.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.database-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-0 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_persistent_volume.storage-3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_secret.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    random_password.database - *terraform.NodeApplyableResourceInstance
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    var.database_name - *terraform.NodeRootVariable
  kubernetes_secret.database-name (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    random_password.database - *terraform.NodeApplyableResourceInstance
  kubernetes_secret.database-password (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    var.database_username - *terraform.NodeRootVariable
  kubernetes_secret.database-username (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    random_password.storage - *terraform.NodeApplyableResourceInstance
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_secret.storage-access-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    random_password.storage - *terraform.NodeApplyableResourceInstance
  kubernetes_secret.storage-secret-key (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.storage-service (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service_account.admin (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    random_password.database - *terraform.NodeApplyableResourceInstance
    var.database_name - *terraform.NodeRootVariable
    var.database_username - *terraform.NodeRootVariable
  kubernetes_stateful_set.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    random_password.storage - *terraform.NodeApplyableResourceInstance
    var.storage_access_key - *terraform.NodeRootVariable
  kubernetes_stateful_set.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
    output.database_name - *terraform.NodeApplyableOutput
    output.database_password - *terraform.NodeApplyableOutput
    output.database_username - *terraform.NodeApplyableOutput
    output.storage_access_key - *terraform.NodeApplyableOutput
    output.storage_password - *terraform.NodeApplyableOutput
  output.database_name - *terraform.NodeApplyableOutput
    var.database_name - *terraform.NodeRootVariable
  output.database_password - *terraform.NodeApplyableOutput
    random_password.database - *terraform.NodeApplyableResourceInstance
  output.database_username - *terraform.NodeApplyableOutput
    var.database_username - *terraform.NodeRootVariable
  output.storage_access_key - *terraform.NodeApplyableOutput
    var.storage_access_key - *terraform.NodeRootVariable
  output.storage_password - *terraform.NodeApplyableOutput
    random_password.storage - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_cluster_role_binding.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.database-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-0 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-1 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-2 - *terraform.NodeApplyableResourceInstance
    kubernetes_persistent_volume.storage-3 - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-name - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-password - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.database-username - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-access-key - *terraform.NodeApplyableResourceInstance
    kubernetes_secret.storage-secret-key - *terraform.NodeApplyableResourceInstance
    kubernetes_service.database - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage - *terraform.NodeApplyableResourceInstance
    kubernetes_service.storage-service - *terraform.NodeApplyableResourceInstance
    kubernetes_service_account.admin - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.database - *terraform.NodeApplyableResourceInstance
    kubernetes_stateful_set.storage - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
    random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.storage - *terraform.NodeApplyableResourceInstance
  random_password.database - *terraform.NodeApplyableResourceInstance
    random_password.database (expand) - *terraform.nodeExpandApplyableResource
  random_password.database (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  random_password.storage - *terraform.NodeApplyableResourceInstance
    random_password.storage (expand) - *terraform.nodeExpandApplyableResource
  random_password.storage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/random"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/random"] (close) - *terraform.graphNodeCloseProvider
  var.database_name - *terraform.NodeRootVariable
  var.database_username - *terraform.NodeRootVariable
  var.storage_access_key - *terraform.NodeRootVariable
  ------
2021/01/05 22:48:38 [DEBUG] Starting graph walk: walkApply
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "var.database_username"
2021/01/05 22:48:38 [TRACE] vertex "var.database_username": starting visit (*terraform.NodeRootVariable)
2021/01/05 22:48:38 [TRACE] vertex "var.database_username": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "output.database_username"
2021/01/05 22:48:38 [TRACE] vertex "output.database_username": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "var.storage_access_key"
2021/01/05 22:48:38 [TRACE] vertex "var.storage_access_key": starting visit (*terraform.NodeRootVariable)
2021/01/05 22:48:38 [TRACE] vertex "var.storage_access_key": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "output.storage_access_key"
2021/01/05 22:48:38 [TRACE] ExecuteWriteOutput: Saving NoOp change for output.database_username in changeset
2021/01/05 22:48:38 [TRACE] EvalWriteOutput: Saving value for output.database_username in state
2021/01/05 22:48:38 [TRACE] vertex "output.database_username": visit complete
2021/01/05 22:48:38 [TRACE] vertex "output.storage_access_key": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/random\"]"
2021/01/05 22:48:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"]": starting visit (*terraform.NodeApplyableProvider)
2021/01/05 22:48:38 [TRACE] ExecuteWriteOutput: Saving NoOp change for output.storage_access_key in changeset
2021/01/05 22:48:38 [TRACE] EvalWriteOutput: Saving value for output.storage_access_key in state
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "var.database_name"
2021/01/05 22:48:38 [TRACE] vertex "output.storage_access_key": visit complete
2021/01/05 22:48:38 [TRACE] vertex "var.database_name": starting visit (*terraform.NodeRootVariable)
2021/01/05 22:48:38 [TRACE] vertex "var.database_name": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "output.database_name"
2021/01/05 22:48:38 [TRACE] vertex "output.database_name": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:38 [TRACE] ExecuteWriteOutput: Saving NoOp change for output.database_name in changeset
2021/01/05 22:48:38 [TRACE] EvalWriteOutput: Saving value for output.database_name in state
2021/01/05 22:48:38 [TRACE] vertex "output.database_name": visit complete
2021-01-05T22:48:38.306+0100 [INFO]  plugin: configuring client automatic mTLS
2021-01-05T22:48:38.334+0100 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4]
2021-01-05T22:48:38.339+0100 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 pid=85515
2021-01-05T22:48:38.340+0100 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4
2021-01-05T22:48:38.375+0100 [INFO]  plugin.terraform-provider-kubernetes_v1.13.3_x4: configuring server automatic mTLS: timestamp=2021-01-05T22:48:38.375+0100
2021-01-05T22:48:38.401+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: plugin address: address=/var/folders/ry/fr4q9mg93gn8zzz2cr3w5xxr0000gn/T/plugin602482086 network=unix timestamp=2021-01-05T22:48:38.401+0100
2021-01-05T22:48:38.401+0100 [DEBUG] plugin: using plugin: version=5
2021/01/05 22:48:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/01/05 22:48:38 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: no configuration at all
2021/01/05 22:48:38 [TRACE] GRPCProvider: GetSchema
2021-01-05T22:48:38.455+0100 [TRACE] plugin.stdio: waiting for stdio data
2021-01-05T22:48:38.456+0100 [INFO]  plugin: configuring client automatic mTLS
2021-01-05T22:48:38.484+0100 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5]
2021-01-05T22:48:38.489+0100 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 pid=85516
2021-01-05T22:48:38.489+0100 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5
2021-01-05T22:48:38.498+0100 [INFO]  plugin.terraform-provider-random_v3.0.0_x5: configuring server automatic mTLS: timestamp=2021-01-05T22:48:38.497+0100
2021/01/05 22:48:38 [TRACE] No provider meta schema returned
2021-01-05T22:48:38.527+0100 [DEBUG] plugin.terraform-provider-random_v3.0.0_x5: plugin address: address=/var/folders/ry/fr4q9mg93gn8zzz2cr3w5xxr0000gn/T/plugin715771659 network=unix timestamp=2021-01-05T22:48:38.527+0100
2021-01-05T22:48:38.527+0100 [DEBUG] plugin: using plugin: version=5
2021/01/05 22:48:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/random\"]" provider for provider["registry.terraform.io/hashicorp/random"]
2021/01/05 22:48:38 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/random"]: no configuration at all
2021/01/05 22:48:38 [TRACE] GRPCProvider: GetSchema
2021-01-05T22:48:38.578+0100 [TRACE] plugin.stdio: waiting for stdio data
2021/01/05 22:48:38 [TRACE] GRPCProvider: Configure
2021-01-05T22:48:38.579+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] Trying to load configuration from file
2021-01-05T22:48:38.579+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] Configuration file is: /Users/e8kor/.kube/config
2021/01/05 22:48:38 [TRACE] GRPCProvider: Configure
2021-01-05T22:48:38.580+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Successfully initialized config
2021/01/05 22:48:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/01/05 22:48:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"]": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service_account.admin (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service_account.admin (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service_account.admin (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service_account.admin (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "random_password.database (expand)"
2021/01/05 22:48:38 [TRACE] vertex "random_password.database (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service_account.admin"
2021/01/05 22:48:38 [TRACE] vertex "random_password.database (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service_account.admin": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "random_password.database (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service_account.admin": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "random_password.database"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service_account.admin (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service_account.admin (expand)": visit complete
2021/01/05 22:48:38 [TRACE] vertex "random_password.database": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "random_password.database": visit complete
2021/01/05 22:48:38 [TRACE] vertex "random_password.database (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "random_password.database (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service_account.admin"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service_account.admin": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "random_password.database"
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.storage-access-key (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-access-key (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service.storage-service (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage-service (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage-service (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database-username (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage-service (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_stateful_set.database (expand)"
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service.storage-service"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage-service": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage-service": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage-service (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage-service (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service.storage-service"
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.admin (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.admin (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.admin (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service_account.admin
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.admin (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-0 (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-0 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-0 (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_stateful_set.storage (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-0 (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.database-0 (expand)"
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.admin"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.admin": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-0"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-0": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.database-0 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.database-0 (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.database-0 (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.admin": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.database-0"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.database-0": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database-password (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-password (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-0": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-0 (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_cluster_role_binding.admin (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_cluster_role_binding.admin (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-2 (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_cluster_role_binding.admin (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.database-0": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.database-0 (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.storage (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-password (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-password (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-3 (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-3 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-3 (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database-password"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-password": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database-name (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-access-key (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-3 (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-access-key (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-3"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-3": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.storage-access-key"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-3": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-3 (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "random_password.storage (expand)"
2021/01/05 22:48:38 [TRACE] vertex "random_password.database": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_cluster_role_binding.admin (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_cluster_role_binding.admin"
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.storage-secret-key (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-secret-key (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-secret-key (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-secret-key (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for random_password.database
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_cluster_role_binding.admin": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.storage-secret-key"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-secret-key": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-username (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-username (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_service_account.admin
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-access-key": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.storage (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.storage (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.storage (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-secret-key": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_stateful_set.storage"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-secret-key (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.database (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-secret-key (expand)": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.database (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.database (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_service_account.admin
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for random_password.database
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.storage": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service.storage (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-access-key": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-access-key (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.storage"
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for random_password.database
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.storage": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.storage (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.database-0 (expand)": visit complete
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for random_password.database
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.database-0"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.database-0": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service.database (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.database (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.database (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.database (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service.database"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.database": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage-service": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.database": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.database (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.database (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service.database"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.database": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] Re-validating config for "random_password.database"
2021/01/05 22:48:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_persistent_volume.database-0
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume.database-0
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_persistent_volume.database-0
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.storage-service
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_service.storage-service
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_service.storage-service
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.database
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_service.database
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_service.database
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.storage-service
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.database
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_persistent_volume.database-0
2021/01/05 22:48:38 [TRACE] Re-validating config for "kubernetes_service.storage-service"
2021/01/05 22:48:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-name (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-name (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-name (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] Re-validating config for "kubernetes_service.database"
2021/01/05 22:48:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database-name"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-name": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-name": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-name (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-name (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database-name"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-name": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-password": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-password (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-password (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-1 (expand)"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-1 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-1 (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-1 (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-1"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-1": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.database-name
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_secret.database-name
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_secret.database-name
2021/01/05 22:48:38 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.database-name
2021/01/05 22:48:38 [TRACE] Re-validating config for "kubernetes_persistent_volume.database-0"
2021/01/05 22:48:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-3 (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-3"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-3": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] Re-validating config for "kubernetes_secret.database-name"
2021/01/05 22:48:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-1": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-1 (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-1 (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-1"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-1": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-username (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_stateful_set.database"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.database": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.database": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.database (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.database (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service.storage"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_service.storage"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_service.storage": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.storage
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_service.storage
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_service.storage
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.storage
2021/01/05 22:48:38 [TRACE] Re-validating config for "kubernetes_service.storage"
2021/01/05 22:48:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.admin (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.admin (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.admin"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.admin": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] Re-validating config for "kubernetes_persistent_volume.storage-1"
2021/01/05 22:48:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.admin
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_secret.admin
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_secret.admin
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.admin
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service_account.admin
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database-username"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-username": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-access-key (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.storage-access-key"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.storage-access-key": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-2 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-2 (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-2 (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] Re-validating config for "kubernetes_secret.admin"
2021/01/05 22:48:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-2"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-2": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.storage (expand)": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database (expand)": visit complete
2021/01/05 22:48:38 [TRACE] vertex "random_password.storage (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/01/05 22:48:38 [TRACE] vertex "random_password.storage (expand)": expanding dynamic subgraph
2021/01/05 22:48:38 [TRACE] vertex "random_password.storage (expand)": entering dynamic subgraph
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "random_password.storage"
2021/01/05 22:48:38 [TRACE] vertex "random_password.storage": starting visit (*terraform.NodeApplyableResource)
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:38 [TRACE] Re-validating config for "kubernetes_service_account.admin"
2021/01/05 22:48:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-0 (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-0"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_persistent_volume.storage-0": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [WARN] Provider "registry.terraform.io/hashicorp/random" produced an invalid plan for random_password.database, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .min_special: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .number: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .lower: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .upper: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .min_lower: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_numeric: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_upper: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
2021/01/05 22:48:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for random_password.database
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for random_password.database
2021/01/05 22:48:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:38 [DEBUG] random_password.database: applying the planned Create change
2021/01/05 22:48:38 [TRACE] GRPCProvider: ApplyResourceChange
2021/01/05 22:48:38 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:38 [TRACE] Re-validating config for "kubernetes_persistent_volume.storage-3"
2021/01/05 22:48:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:38 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_cluster_role_binding.admin": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_cluster_role_binding.admin (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_cluster_role_binding.admin (expand)": visit complete
2021/01/05 22:48:38 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_cluster_role_binding.admin"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_cluster_role_binding.admin": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:38 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:38 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:38 [TRACE] EvalWriteState: recording 0 dependencies for random_password.database
2021/01/05 22:48:38 [TRACE] EvalWriteState: writing current state object for random_password.database
2021/01/05 22:48:38 [TRACE] EvalWriteState: recording 0 dependencies for random_password.database
2021/01/05 22:48:38 [TRACE] EvalWriteState: writing current state object for random_password.database
2021/01/05 22:48:38 [TRACE] vertex "random_password.database": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database-password"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-password": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-username": visit complete
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-username (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-username (expand)": visit complete
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database-username"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database-username": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_secret.database"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_secret.database": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "kubernetes_stateful_set.database"
2021/01/05 22:48:38 [TRACE] vertex "kubernetes_stateful_set.database": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:38 [TRACE] dag/walk: visiting "output.database_password"
2021/01/05 22:48:38 [TRACE] vertex "output.database_password": starting visit (*terraform.NodeApplyableOutput)
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.storage-access-key
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_secret.storage-access-key
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_secret.storage-access-key
2021/01/05 22:48:38 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.storage-access-key
2021/01/05 22:48:38 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:38 [TRACE] Re-validating config for "kubernetes_secret.storage-access-key"
2021/01/05 22:48:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:38 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.storage-service, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_service.storage-service
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_service.storage-service
2021/01/05 22:48:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.database-name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_secret.database-name
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_secret.database-name
2021/01/05 22:48:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:38 [DEBUG] kubernetes_secret.database-name: applying the planned Create change
2021/01/05 22:48:38 [TRACE] GRPCProvider: ApplyResourceChange
2021/01/05 22:48:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:38 [DEBUG] kubernetes_service.storage-service: applying the planned Create change
2021/01/05 22:48:38 [TRACE] GRPCProvider: ApplyResourceChange
2021/01/05 22:48:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_service_account.admin
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_service_account.admin
2021/01/05 22:48:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:38 [DEBUG] kubernetes_service_account.admin: applying the planned Create change
2021/01/05 22:48:38 [TRACE] GRPCProvider: ApplyResourceChange
2021/01/05 22:48:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.database, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].type: planned value cty.StringVal("ClusterIP") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_service.database
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_service.database
2021/01/05 22:48:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:38 [DEBUG] kubernetes_service.database: applying the planned Create change
2021/01/05 22:48:38 [TRACE] GRPCProvider: ApplyResourceChange
2021/01/05 22:48:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.storage, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].type: planned value cty.StringVal("ClusterIP") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_service.storage
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_service.storage
2021/01/05 22:48:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:38 [DEBUG] kubernetes_service.storage: applying the planned Create change
2021/01/05 22:48:38 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:38.591+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] setting computed for "load_balancer_ingress" from ComputedKeys
2021-01-05T22:48:38.591+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] setting computed for "load_balancer_ingress" from ComputedKeys
2021/01/05 22:48:38 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_secret.admin
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_secret.admin
2021/01/05 22:48:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:38 [DEBUG] kubernetes_secret.admin: applying the planned Create change
2021/01/05 22:48:38 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:38.596+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] setting computed for "load_balancer_ingress" from ComputedKeys
2021/01/05 22:48:38 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_persistent_volume.database-0, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].volume_mode: planned value cty.StringVal("Filesystem") does not match config value cty.NullVal(cty.String)
      - .spec[0].node_affinity: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/05 22:48:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume.database-0
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_persistent_volume.database-0
2021/01/05 22:48:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:38 [DEBUG] kubernetes_persistent_volume.database-0: applying the planned Create change
2021/01/05 22:48:38 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:38.602+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Creating new secret: v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-name", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database-name":[]uint8{0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73}}, StringData:map[string]string(nil), Type:"Opaque"}
2021/01/05 22:48:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.storage-access-key, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_secret.storage-access-key
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_secret.storage-access-key
2021/01/05 22:48:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:38 [DEBUG] kubernetes_secret.storage-access-key: applying the planned Create change
2021/01/05 22:48:38 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:38.604+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5432, TargetPort:intstr.IntOrString{Type:0, IntVal:5432, StrVal:""}, NodePort:0}}, Selector:map[string]string{"app":"database"}, ClusterIP:"", Type:"ClusterIP", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}
2021/01/05 22:48:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_persistent_volume.storage-1, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].volume_mode: planned value cty.StringVal("Filesystem") does not match config value cty.NullVal(cty.String)
      - .spec[0].node_affinity: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/05 22:48:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_persistent_volume.storage-3, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].volume_mode: planned value cty.StringVal("Filesystem") does not match config value cty.NullVal(cty.String)
      - .spec[0].node_affinity: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/05 22:48:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:38 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:38 [TRACE] EvalReadState: no state present for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:38 [DEBUG] kubernetes_persistent_volume.storage-1: applying the planned Create change
2021/01/05 22:48:38 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:38.607+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Creating new secret: v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-access-key", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Immutable:(*bool)(nil), Data:map[string][]uint8{"storage-access-key":[]uint8{0x6d, 0x69, 0x6e, 0x69, 0x6f}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:38.607+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-service", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:9000, TargetPort:intstr.IntOrString{Type:1, IntVal:0, StrVal:""}, NodePort:30000}}, Selector:map[string]string{"app":"storage"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}
2021-01-05T22:48:38.607+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] setting computed for "spec.0.node_affinity" from ComputedKeys
2021-01-05T22:48:38.607+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] setting computed for "spec.0.node_affinity" from ComputedKeys
2021-01-05T22:48:38.607+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Creating new service account: v1.ServiceAccount{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"admin", GenerateName:"", Namespace:"kube-system", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Secrets:[]v1.ObjectReference{v1.ObjectReference{Kind:"", Namespace:"", Name:"admin", UID:"", APIVersion:"", ResourceVersion:"", FieldPath:""}}, ImagePullSecrets:[]v1.LocalObjectReference{}, AutomountServiceAccountToken:(*bool)(0xc000454d5a)}
2021-01-05T22:48:38.607+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Creating new persistent volume: v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-0", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"database"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc000345640), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc000d13550), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"", Message:"", Reason:""}}
2021-01-05T22:48:38.607+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Creating new secret: v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"admin", GenerateName:"", Namespace:"kube-system", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubernetes.io/service-account.name":"admin"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Immutable:(*bool)(nil), Data:map[string][]uint8{}, StringData:map[string]string(nil), Type:"kubernetes.io/service-account-token"}
2021-01-05T22:48:38.607+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"storage", Protocol:"TCP", AppProtocol:(*string)(nil), Port:9000, TargetPort:intstr.IntOrString{Type:1, IntVal:0, StrVal:""}, NodePort:0}}, Selector:map[string]string{"app":"storage"}, ClusterIP:"None", Type:"ClusterIP", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}
2021/01/05 22:48:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:38 [DEBUG] kubernetes_persistent_volume.storage-3: applying the planned Create change
2021/01/05 22:48:38 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:38.614+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] setting computed for "spec.0.node_affinity" from ComputedKeys
2021-01-05T22:48:38.614+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] setting computed for "spec.0.node_affinity" from ComputedKeys
2021-01-05T22:48:38.614+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Creating new persistent volume: v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-1", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc0006f55a0), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc000e59180), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"", Message:"", Reason:""}}
2021-01-05T22:48:38.616+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] setting computed for "spec.0.node_affinity" from ComputedKeys
2021-01-05T22:48:38.616+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] setting computed for "spec.0.node_affinity" from ComputedKeys
2021-01-05T22:48:38.616+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Creating new persistent volume: v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-3", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc000345620), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc0006cf1b0), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"", Message:"", Reason:""}}
2021-01-05T22:48:38.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Submitted new persistent volume: &v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-3", GenerateName:"", Namespace:"", SelfLink:"/api/v1/persistentvolumes/storage-3", UID:"2a4d606e-4317-4693-8efb-8365f529e79a", ResourceVersion:"234146", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"kubernetes.io/pv-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00145fb40), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00145fb60)}}}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc00145fb80), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc000e19cd0), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"Pending", Message:"", Reason:""}}
2021-01-05T22:48:38.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] Waiting for state to become: [Available Bound]
2021-01-05T22:48:38.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Submitted new persistent volume: &v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-1", GenerateName:"", Namespace:"", SelfLink:"/api/v1/persistentvolumes/storage-1", UID:"a6c83493-2472-4ce9-bf1b-1f05243f8069", ResourceVersion:"234145", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"kubernetes.io/pv-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000ae75a0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ae75c0)}}}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc000ae75e0), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc000efa2d0), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"Pending", Message:"", Reason:""}}
2021-01-05T22:48:38.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] Waiting for state to become: [Available Bound]
2021-01-05T22:48:38.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Submitted new persistent volume: &v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-0", GenerateName:"", Namespace:"", SelfLink:"/api/v1/persistentvolumes/database-0", UID:"720c879b-9744-4b65-a90e-a0063a5730c4", ResourceVersion:"234144", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"database"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"kubernetes.io/pv-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000b21580), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b215a0)}}}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc000b215c0), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc0013f1df0), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"Pending", Message:"", Reason:""}}
2021-01-05T22:48:38.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] Waiting for state to become: [Available Bound]
2021-01-05T22:48:38.937+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Submitted new service account: &v1.ServiceAccount{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"admin", GenerateName:"", Namespace:"kube-system", SelfLink:"/api/v1/namespaces/kube-system/serviceaccounts/admin", UID:"1fbc150a-cbb8-4e2b-8337-e2c0259d8474", ResourceVersion:"234150", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000af8300), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000af8320)}}}, Secrets:[]v1.ObjectReference{v1.ObjectReference{Kind:"", Namespace:"", Name:"admin", UID:"", APIVersion:"", ResourceVersion:"", FieldPath:""}}, ImagePullSecrets:[]v1.LocalObjectReference(nil), AutomountServiceAccountToken:(*bool)(0xc000f2f585)}
2021-01-05T22:48:38.937+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] Waiting for state to become: [success]
2021-01-05T22:48:38.940+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/services/database", UID:"36dd2542-e160-458c-be13-ebec07495afe", ResourceVersion:"234148", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000b4d9e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b4da00)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5432, TargetPort:intstr.IntOrString{Type:0, IntVal:5432, StrVal:""}, NodePort:0}}, Selector:map[string]string{"app":"database"}, ClusterIP:"10.43.77.18", Type:"ClusterIP", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}
2021-01-05T22:48:38.940+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/services/storage", UID:"848764ee-684b-485e-aa37-5603e2446f9b", ResourceVersion:"234151", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000b9a600), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9a620)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"storage", Protocol:"TCP", AppProtocol:(*string)(nil), Port:9000, TargetPort:intstr.IntOrString{Type:0, IntVal:9000, StrVal:""}, NodePort:0}}, Selector:map[string]string{"app":"storage"}, ClusterIP:"None", Type:"ClusterIP", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}
2021-01-05T22:48:38.940+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Reading service database
2021-01-05T22:48:38.940+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Reading service storage
2021-01-05T22:48:38.946+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] Persistent volume storage-3 status received: "Pending"
2021-01-05T22:48:38.946+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [TRACE] Waiting 200ms before next try
2021-01-05T22:48:38.948+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Submitting new secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"admin", GenerateName:"", Namespace:"kube-system", SelfLink:"/api/v1/namespaces/kube-system/secrets/admin", UID:"d8891037-4d2d-4ed3-b050-273fa58a8fd2", ResourceVersion:"234149", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubernetes.io/service-account.name":"admin"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000c1d3c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c1d3e0)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8(nil), StringData:map[string]string(nil), Type:"kubernetes.io/service-account-token"}
2021-01-05T22:48:38.949+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [INFO] Reading secret admin
2021-01-05T22:48:38.999+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [DEBUG] Persistent volume storage-1 status received: "Pending"
2021-01-05T22:48:38.999+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:38 [TRACE] Waiting 200ms before next try
2021-01-05T22:48:39.067+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitting new secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-name", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"/api/v1/namespaces/openfaas-fn/secrets/database-name", UID:"063e3fc2-1937-45b5-b87c-5ebd76826c23", ResourceVersion:"234153", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000c42d40), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c42d60)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database-name":[]uint8{0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.067+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading secret database-name
2021-01-05T22:48:39.080+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitting new secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-access-key", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"/api/v1/namespaces/openfaas-fn/secrets/storage-access-key", UID:"6c4929f4-d691-4f4a-91a2-7d97e0e6bcce", ResourceVersion:"234154", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00146a540), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00146a560)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"storage-access-key":[]uint8{0x6d, 0x69, 0x6e, 0x69, 0x6f}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.080+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading secret storage-access-key
2021-01-05T22:48:39.116+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Persistent volume database-0 status received: "Available"
2021-01-05T22:48:39.116+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Persistent volume database-0 created
2021-01-05T22:48:39.116+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/services/storage", UID:"848764ee-684b-485e-aa37-5603e2446f9b", ResourceVersion:"234151", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00146bf00), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00146bf20)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"storage", Protocol:"TCP", AppProtocol:(*string)(nil), Port:9000, TargetPort:intstr.IntOrString{Type:0, IntVal:9000, StrVal:""}, NodePort:0}}, Selector:map[string]string{"app":"storage"}, ClusterIP:"None", Type:"ClusterIP", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}
2021-01-05T22:48:39.116+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"None", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"storage", "node_port":0, "port":9000, "protocol":"TCP", "target_port":"9000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"app":"storage"}, "session_affinity":"None", "type":"ClusterIP"}}
2021-01-05T22:48:39.116+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading persistent volume database-0
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.storage, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_service.storage
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_service.storage
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_service.storage
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_service.storage
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_service.storage": visit complete
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_persistent_volume.storage-2": visit complete
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_persistent_volume.storage-2 (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_persistent_volume.storage-2 (expand)": visit complete
2021/01/05 22:48:39 [TRACE] vertex "random_password.storage": visit complete
2021/01/05 22:48:39 [TRACE] vertex "random_password.storage (expand)": dynamic subgraph completed successfully
2021/01/05 22:48:39 [TRACE] dag/walk: visiting "kubernetes_persistent_volume.storage-2"
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_persistent_volume.storage-2": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:39 [TRACE] vertex "random_password.storage (expand)": visit complete
2021/01/05 22:48:39 [TRACE] dag/walk: visiting "random_password.storage"
2021/01/05 22:48:39 [TRACE] vertex "random_password.storage": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_persistent_volume.storage-0
2021-01-05T22:48:39.118+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Configuration contains 1 secrets, saw 1, expected 2
2021-01-05T22:48:39.118+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [TRACE] Waiting 500ms before next try
2021/01/05 22:48:39 [TRACE] Re-validating config for "kubernetes_persistent_volume.storage-0"
2021/01/05 22:48:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:39 [TRACE] GRPCProvider: PlanResourceChange
2021-01-05T22:48:39.121+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"admin", GenerateName:"", Namespace:"kube-system", SelfLink:"/api/v1/namespaces/kube-system/secrets/admin", UID:"d8891037-4d2d-4ed3-b050-273fa58a8fd2", ResourceVersion:"234149", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubernetes.io/service-account.name":"admin"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0011744c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011744e0)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8(nil), StringData:map[string]string(nil), Type:"kubernetes.io/service-account-token"}
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_secret.admin, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_secret.admin
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.admin
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_secret.admin
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.admin
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_secret.admin": visit complete
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:39 [TRACE] Re-validating config for "kubernetes_cluster_role_binding.admin"
2021/01/05 22:48:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:39 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:39 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:39 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:39 [DEBUG] kubernetes_cluster_role_binding.admin: applying the planned Create change
2021/01/05 22:48:39 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:39.125+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Creating new ClusterRoleBinding: &v1.ClusterRoleBinding{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"admin", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Subjects:[]v1.Subject{v1.Subject{Kind:"ServiceAccount", APIGroup:"", Name:"admin", Namespace:"kube-system"}}, RoleRef:v1.RoleRef{APIGroup:"rbac.authorization.k8s.io", Kind:"ClusterRole", Name:"cluster-admin"}}
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_persistent_volume.storage-0, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].volume_mode: planned value cty.StringVal("Filesystem") does not match config value cty.NullVal(cty.String)
      - .spec[0].node_affinity: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/05 22:48:39 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:39 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:39 [DEBUG] kubernetes_persistent_volume.storage-0: applying the planned Create change
2021/01/05 22:48:39 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:39.133+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.node_affinity" from ComputedKeys
2021-01-05T22:48:39.134+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.node_affinity" from ComputedKeys
2021-01-05T22:48:39.134+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Creating new persistent volume: v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-0", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc000b1eec0), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc000c11f20), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"", Message:"", Reason:""}}
2021-01-05T22:48:39.357+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Persistent volume storage-1 status received: "Available"
2021-01-05T22:48:39.357+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Persistent volume storage-1 created
2021-01-05T22:48:39.357+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading persistent volume storage-1
2021-01-05T22:48:39.373+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-access-key", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"/api/v1/namespaces/openfaas-fn/secrets/storage-access-key", UID:"6c4929f4-d691-4f4a-91a2-7d97e0e6bcce", ResourceVersion:"234154", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000b4b700), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b4b780)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"storage-access-key":[]uint8{0x6d, 0x69, 0x6e, 0x69, 0x6f}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.373+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-name", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"/api/v1/namespaces/openfaas-fn/secrets/database-name", UID:"063e3fc2-1937-45b5-b87c-5ebd76826c23", ResourceVersion:"234153", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000e2c1c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e2c1e0)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database-name":[]uint8{0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73}}, StringData:map[string]string(nil), Type:"Opaque"}
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_secret.storage-access-key, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_secret.storage-access-key
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.storage-access-key
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_secret.database-name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_secret.database-name
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database-name
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_secret.storage-access-key
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.storage-access-key
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_secret.database-name
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database-name
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_secret.storage-access-key": visit complete
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_secret.database-name": visit complete
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.database-password
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_secret.database-password
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_secret.database-password
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.database-username
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_secret.database-username
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_secret.database-username
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.database-username
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.database-password
2021/01/05 22:48:39 [TRACE] Re-validating config for "kubernetes_secret.database-username"
2021/01/05 22:48:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:39 [TRACE] Re-validating config for "kubernetes_secret.database-password"
2021/01/05 22:48:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:39 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:39 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.database-username, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:39 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.database-password, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:39 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_secret.database-username
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_secret.database-username
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_secret.database-password
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_secret.database-password
2021/01/05 22:48:39 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:39 [DEBUG] kubernetes_secret.database-username: applying the planned Create change
2021/01/05 22:48:39 [TRACE] GRPCProvider: ApplyResourceChange
2021/01/05 22:48:39 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:39 [DEBUG] kubernetes_secret.database-password: applying the planned Create change
2021/01/05 22:48:39 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:39.376+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Creating new secret: v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-username", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database-username":[]uint8{0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.376+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Creating new secret: v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-password", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database-password":[]uint8{0x36, 0x41, 0x74, 0x77, 0x6a, 0x70, 0x56, 0x6d, 0x53, 0x62, 0x31, 0x63, 0x37, 0x4b, 0x6f, 0x4b}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.383+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/services/database", UID:"36dd2542-e160-458c-be13-ebec07495afe", ResourceVersion:"234148", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0000a3de0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000a3e20)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5432, TargetPort:intstr.IntOrString{Type:0, IntVal:5432, StrVal:""}, NodePort:0}}, Selector:map[string]string{"app":"database"}, ClusterIP:"10.43.77.18", Type:"ClusterIP", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}
2021-01-05T22:48:39.383+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.43.77.18", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":0, "port":5432, "protocol":"TCP", "target_port":"5432"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"app":"database"}, "session_affinity":"None", "type":"ClusterIP"}}
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.database, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_service.database
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_service.database
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_service.database
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_service.database
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_service.database": visit complete
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.database
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_secret.database
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_secret.database
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.database
2021/01/05 22:48:39 [TRACE] Re-validating config for "kubernetes_secret.database"
2021/01/05 22:48:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:39 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.database, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:39 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_secret.database
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_secret.database
2021/01/05 22:48:39 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:39 [DEBUG] kubernetes_secret.database: applying the planned Create change
2021/01/05 22:48:39 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:39.387+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Persistent volume storage-3 status received: "Available"
2021-01-05T22:48:39.387+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Persistent volume storage-3 created
2021-01-05T22:48:39.387+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading persistent volume storage-3
2021-01-05T22:48:39.388+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Creating new secret: v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database_name":[]uint8{0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73}, "password":[]uint8{0x36, 0x41, 0x74, 0x77, 0x6a, 0x70, 0x56, 0x6d, 0x53, 0x62, 0x31, 0x63, 0x37, 0x4b, 0x6f, 0x4b}, "username":[]uint8{0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.502+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitted new ClusterRoleBinding: &v1.ClusterRoleBinding{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"admin", GenerateName:"", Namespace:"", SelfLink:"/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/admin", UID:"acf5001c-d4ae-4754-b47a-47bac97c885c", ResourceVersion:"234165", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"rbac.authorization.k8s.io/v1", Time:(*v1.Time)(0xc0008bfa80), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008bfaa0)}}}, Subjects:[]v1.Subject{v1.Subject{Kind:"ServiceAccount", APIGroup:"", Name:"admin", Namespace:"kube-system"}}, RoleRef:v1.RoleRef{APIGroup:"rbac.authorization.k8s.io", Kind:"ClusterRole", Name:"cluster-admin"}}
2021-01-05T22:48:39.502+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading ClusterRoleBinding admin
2021-01-05T22:48:39.511+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received persistent volume: &v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-1", GenerateName:"", Namespace:"", SelfLink:"/api/v1/persistentvolumes/storage-1", UID:"a6c83493-2472-4ce9-bf1b-1f05243f8069", ResourceVersion:"234158", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"kubernetes.io/pv-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00144c880), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00144c8a0)}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00144c8c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00144c8e0)}}}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc00144c900), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc0011be000), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"Available", Message:"", Reason:""}}
2021-01-05T22:48:39.513+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitting new secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-password", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"/api/v1/namespaces/openfaas-fn/secrets/database-password", UID:"5187b0dd-9154-4cd2-a0c0-cce3b2fb4ac8", ResourceVersion:"234168", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000ae7420), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ae7440)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database-password":[]uint8{0x36, 0x41, 0x74, 0x77, 0x6a, 0x70, 0x56, 0x6d, 0x53, 0x62, 0x31, 0x63, 0x37, 0x4b, 0x6f, 0x4b}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.513+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading secret database-password
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-1
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_persistent_volume.storage-1": visit complete
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_stateful_set.database
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_stateful_set.database
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_stateful_set.database
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_stateful_set.database
2021-01-05T22:48:39.515+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitting new secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-username", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"/api/v1/namespaces/openfaas-fn/secrets/database-username", UID:"186b3d57-8c56-434e-ad28-11afe9e7cfdc", ResourceVersion:"234167", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00145e640), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00145e660)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database-username":[]uint8{0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.515+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received persistent volume: &v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-0", GenerateName:"", Namespace:"", SelfLink:"/api/v1/persistentvolumes/database-0", UID:"720c879b-9744-4b65-a90e-a0063a5730c4", ResourceVersion:"234152", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"database"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"kubernetes.io/pv-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0008cfcc0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008cfd00)}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0008cfd40), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008cfd80)}}}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc0008cfdc0), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc001361190), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"Available", Message:"", Reason:""}}
2021-01-05T22:48:39.515+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading secret database-username
2021/01/05 22:48:39 [TRACE] Re-validating config for "kubernetes_stateful_set.database"
2021/01/05 22:48:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-01-05T22:48:39.519+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitted new persistent volume: &v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-0", GenerateName:"", Namespace:"", SelfLink:"/api/v1/persistentvolumes/storage-0", UID:"b7dd57c5-4562-44e6-91e1-2e0a00d0f2fc", ResourceVersion:"234164", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"kubernetes.io/pv-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000b0f320), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b0f340)}}}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc000b0f360), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc000f764f0), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"Pending", Message:"", Reason:""}}
2021-01-05T22:48:39.519+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Waiting for state to become: [Available Bound]
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_persistent_volume.database-0
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.database-0
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_persistent_volume.database-0
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.database-0
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_persistent_volume.database-0": visit complete
2021/01/05 22:48:39 [TRACE] ExecuteWriteOutput: Saving Create change for output.database_password in changeset
2021/01/05 22:48:39 [TRACE] EvalWriteOutput: Saving value for output.database_password in state
2021/01/05 22:48:39 [TRACE] vertex "output.database_password": visit complete
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:39 [TRACE] Re-validating config for "kubernetes_persistent_volume.storage-2"
2021/01/05 22:48:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:39 [TRACE] GRPCProvider: PlanResourceChange
2021-01-05T22:48:39.523+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-service", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/services/storage-service", UID:"71e2b16f-1a4f-49d8-b2a1-54d6f1d8a52d", ResourceVersion:"234163", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000fa01e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0200)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:9000, TargetPort:intstr.IntOrString{Type:0, IntVal:9000, StrVal:""}, NodePort:30000}}, Selector:map[string]string{"app":"storage"}, ClusterIP:"10.43.203.33", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}
2021-01-05T22:48:39.524+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading service storage-service
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_persistent_volume.storage-2, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].volume_mode: planned value cty.StringVal("Filesystem") does not match config value cty.NullVal(cty.String)
      - .spec[0].node_affinity: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/05 22:48:39 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:39 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:39 [DEBUG] kubernetes_persistent_volume.storage-2: applying the planned Create change
2021/01/05 22:48:39 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:39.541+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.node_affinity" from ComputedKeys
2021-01-05T22:48:39.541+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.node_affinity" from ComputedKeys
2021-01-05T22:48:39.544+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Creating new persistent volume: v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-2", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc000b17920), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc00153b750), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"", Message:"", Reason:""}}
2021/01/05 22:48:39 [TRACE] GRPCProvider: PlanResourceChange
2021-01-05T22:48:39.583+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitting new secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/secrets/database", UID:"c8c6c359-9f41-473e-a518-a8274ab74ea9", ResourceVersion:"234169", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000ae6200), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ae6220)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database_name":[]uint8{0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73}, "password":[]uint8{0x36, 0x41, 0x74, 0x77, 0x6a, 0x70, 0x56, 0x6d, 0x53, 0x62, 0x31, 0x63, 0x37, 0x4b, 0x6f, 0x4b}, "username":[]uint8{0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.587+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading secret database
2021-01-05T22:48:39.588+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received persistent volume: &v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-3", GenerateName:"", Namespace:"", SelfLink:"/api/v1/persistentvolumes/storage-3", UID:"2a4d606e-4317-4693-8efb-8365f529e79a", ResourceVersion:"234162", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480118, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"kubernetes.io/pv-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000ae6260), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ae6280)}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000ae62c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ae62e0)}}}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc000ae6300), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc0007cf560), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"Available", Message:"", Reason:""}}
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-3
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_persistent_volume.storage-3": visit complete
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for random_password.storage
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for random_password.storage
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for random_password.storage
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for random_password.storage
2021/01/05 22:48:39 [TRACE] Re-validating config for "random_password.storage"
2021/01/05 22:48:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:39 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/random" produced an invalid plan for random_password.storage, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .upper: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .min_lower: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_numeric: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_upper: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_special: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .number: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .lower: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/01/05 22:48:39 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for random_password.storage
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for random_password.storage
2021/01/05 22:48:39 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:39 [DEBUG] random_password.storage: applying the planned Create change
2021/01/05 22:48:39 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:39.597+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-service", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/services/storage-service", UID:"71e2b16f-1a4f-49d8-b2a1-54d6f1d8a52d", ResourceVersion:"234163", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0008cfe20), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008cfea0)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:9000, TargetPort:intstr.IntOrString{Type:0, IntVal:9000, StrVal:""}, NodePort:30000}}, Selector:map[string]string{"app":"storage"}, ClusterIP:"10.43.203.33", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}
2021-01-05T22:48:39.597+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.43.203.33", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30000, "port":9000, "protocol":"TCP", "target_port":"9000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"app":"storage"}, "session_affinity":"None", "type":"NodePort"}}
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for random_password.storage
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for random_password.storage
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for random_password.storage
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for random_password.storage
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.storage-service, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_service.storage-service
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_service.storage-service
2021/01/05 22:48:39 [TRACE] vertex "random_password.storage": visit complete
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_service.storage-service
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_service.storage-service
2021/01/05 22:48:39 [TRACE] dag/walk: visiting "kubernetes_stateful_set.storage"
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_stateful_set.storage": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_service.storage-service": visit complete
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_stateful_set.storage
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_stateful_set.storage
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_stateful_set.storage
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_stateful_set.storage
2021/01/05 22:48:39 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/random\"] (close)"
2021/01/05 22:48:39 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/01/05 22:48:39 [TRACE] GRPCProvider: Close
2021/01/05 22:48:39 [TRACE] dag/walk: visiting "kubernetes_secret.storage-secret-key"
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_secret.storage-secret-key": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:39 [TRACE] dag/walk: visiting "kubernetes_secret.storage"
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_secret.storage": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/05 22:48:39 [TRACE] dag/walk: visiting "output.storage_password"
2021/01/05 22:48:39 [TRACE] vertex "output.storage_password": starting visit (*terraform.NodeApplyableOutput)
2021-01-05T22:48:39.599+0100 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021/01/05 22:48:39 [TRACE] Re-validating config for "kubernetes_stateful_set.storage"
2021/01/05 22:48:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-01-05T22:48:39.603+0100 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/random/3.0.0/darwin_amd64/terraform-provider-random_v3.0.0_x5 pid=85516
2021-01-05T22:48:39.603+0100 [DEBUG] plugin: plugin exited
2021/01/05 22:48:39 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/random\"] (close)": visit complete
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.storage-secret-key
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_secret.storage-secret-key
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_secret.storage-secret-key
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.storage-secret-key
2021/01/05 22:48:39 [TRACE] Re-validating config for "kubernetes_secret.storage-secret-key"
2021/01/05 22:48:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:39 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.storage-secret-key, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:39 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_secret.storage-secret-key
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_secret.storage-secret-key
2021/01/05 22:48:39 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:39 [DEBUG] kubernetes_secret.storage-secret-key: applying the planned Create change
2021/01/05 22:48:39 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:39.607+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Creating new secret: v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-secret-key", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Immutable:(*bool)(nil), Data:map[string][]uint8{"storage-secret-key":[]uint8{0x51, 0x39, 0x6d, 0x62, 0x66, 0x72, 0x44, 0x73, 0x36, 0x74, 0x25, 0x56, 0x37, 0x68, 0x76, 0x41}}, StringData:map[string]string(nil), Type:"Opaque"}
2021/01/05 22:48:39 [TRACE] GRPCProvider: PlanResourceChange
2021-01-05T22:48:39.710+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-password", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"/api/v1/namespaces/openfaas-fn/secrets/database-password", UID:"5187b0dd-9154-4cd2-a0c0-cce3b2fb4ac8", ResourceVersion:"234168", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0008b82c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008b82e0)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database-password":[]uint8{0x36, 0x41, 0x74, 0x77, 0x6a, 0x70, 0x56, 0x6d, 0x53, 0x62, 0x31, 0x63, 0x37, 0x4b, 0x6f, 0x4b}}, StringData:map[string]string(nil), Type:"Opaque"}
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_secret.database-password, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_secret.database-password
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database-password
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_secret.database-password
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database-password
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_secret.database-password": visit complete
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.storage
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_secret.storage
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_secret.storage
2021/01/05 22:48:39 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_secret.storage
2021/01/05 22:48:39 [TRACE] Re-validating config for "kubernetes_secret.storage"
2021/01/05 22:48:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/05 22:48:39 [TRACE] GRPCProvider: PlanResourceChange
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_secret.storage, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .type: planned value cty.StringVal("Opaque") does not match config value cty.NullVal(cty.String)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:39 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_secret.storage
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_secret.storage
2021/01/05 22:48:39 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:39 [DEBUG] kubernetes_secret.storage: applying the planned Create change
2021/01/05 22:48:39 [TRACE] GRPCProvider: ApplyResourceChange
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_secret.database-username, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_secret.database-username
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database-username
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_secret.database-username
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database-username
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_secret.database-username": visit complete
2021/01/05 22:48:39 [TRACE] ExecuteWriteOutput: Saving Create change for output.storage_password in changeset
2021/01/05 22:48:39 [TRACE] EvalWriteOutput: Saving value for output.storage_password in state
2021/01/05 22:48:39 [TRACE] vertex "output.storage_password": visit complete
2021-01-05T22:48:39.714+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Creating new secret: v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Immutable:(*bool)(nil), Data:map[string][]uint8{"access_key":[]uint8{0x6d, 0x69, 0x6e, 0x69, 0x6f}, "secret_key":[]uint8{0x51, 0x39, 0x6d, 0x62, 0x66, 0x72, 0x44, 0x73, 0x36, 0x74, 0x25, 0x56, 0x37, 0x68, 0x76, 0x41}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.714+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Persistent volume storage-0 status received: "Pending"
2021-01-05T22:48:39.714+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [TRACE] Waiting 200ms before next try
2021-01-05T22:48:39.714+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database-username", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"/api/v1/namespaces/openfaas-fn/secrets/database-username", UID:"186b3d57-8c56-434e-ad28-11afe9e7cfdc", ResourceVersion:"234167", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0008ceb60), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008ceb80)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database-username":[]uint8{0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.717+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitted new persistent volume: &v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-2", GenerateName:"", Namespace:"", SelfLink:"/api/v1/persistentvolumes/storage-2", UID:"d136f228-aff3-41c0-891d-7c4f00af5484", ResourceVersion:"234172", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"kubernetes.io/pv-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00144c1c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00144c1e0)}}}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc00144c200), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc0019cff80), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"Pending", Message:"", Reason:""}}
2021-01-05T22:48:39.717+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Waiting for state to become: [Available Bound]
2021-01-05T22:48:39.725+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Configuration contains 1 secrets, saw 1, expected 2
2021-01-05T22:48:39.725+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [TRACE] Waiting 1s before next try
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_stateful_set.database, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].metadata[0].annotations: planned value cty.NullVal(cty.Map(cty.String)) does not match config value cty.MapValEmpty(cty.String)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].resources: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].volume_mount[0].mount_propagation: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount[0].read_only: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].volume_claim_template[0].metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:39 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_stateful_set.database
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_stateful_set.database
2021/01/05 22:48:39 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:39 [DEBUG] kubernetes_stateful_set.database: applying the planned Create change
2021/01/05 22:48:39 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:39.739+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received ClusterRoleBinding: &v1.ClusterRoleBinding{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"admin", GenerateName:"", Namespace:"", SelfLink:"/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/admin", UID:"acf5001c-d4ae-4754-b47a-47bac97c885c", ResourceVersion:"234165", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"rbac.authorization.k8s.io/v1", Time:(*v1.Time)(0xc000b16840), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b16940)}}}, Subjects:[]v1.Subject{v1.Subject{Kind:"ServiceAccount", APIGroup:"", Name:"admin", Namespace:"kube-system"}}, RoleRef:v1.RoleRef{APIGroup:"rbac.authorization.k8s.io", Kind:"ClusterRole", Name:"cluster-admin"}}
2021-01-05T22:48:39.739+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Flattened ClusterRoleBinding roleRef: []interface {}{map[string]interface {}{"api_group":"rbac.authorization.k8s.io", "kind":"ClusterRole", "name":"cluster-admin"}}
2021-01-05T22:48:39.739+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Flattened ClusterRoleBinding subjects: []interface {}{map[string]interface {}{"kind":"ServiceAccount", "name":"admin", "namespace":"kube-system"}}
2021-01-05T22:48:39.747+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitting new secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-secret-key", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"/api/v1/namespaces/openfaas-fn/secrets/storage-secret-key", UID:"70f5e365-e523-4eae-92b7-39ba7713c7da", ResourceVersion:"234174", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000b16960), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b169c0)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"storage-secret-key":[]uint8{0x51, 0x39, 0x6d, 0x62, 0x66, 0x72, 0x44, 0x73, 0x36, 0x74, 0x25, 0x56, 0x37, 0x68, 0x76, 0x41}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.747+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading secret storage-secret-key
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_cluster_role_binding.admin
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_cluster_role_binding.admin": visit complete
2021-01-05T22:48:39.762+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/secrets/database", UID:"c8c6c359-9f41-473e-a518-a8274ab74ea9", ResourceVersion:"234169", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0008ceae0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008ceb00)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"database_name":[]uint8{0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73}, "password":[]uint8{0x36, 0x41, 0x74, 0x77, 0x6a, 0x70, 0x56, 0x6d, 0x53, 0x62, 0x31, 0x63, 0x37, 0x4b, 0x6f, 0x4b}, "username":[]uint8{0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73}}, StringData:map[string]string(nil), Type:"Opaque"}
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_secret.database, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_secret.database
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_secret.database
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.database
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_secret.database": visit complete
2021-01-05T22:48:39.783+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Persistent volume storage-2 status received: "Pending"
2021-01-05T22:48:39.783+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [TRACE] Waiting 200ms before next try
2021-01-05T22:48:39.786+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitting new secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/secrets/storage", UID:"32b39fc5-e285-4e27-98e8-a9dbca4c38c0", ResourceVersion:"234175", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000af03a0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000af03e0)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"access_key":[]uint8{0x6d, 0x69, 0x6e, 0x69, 0x6f}, "secret_key":[]uint8{0x51, 0x39, 0x6d, 0x62, 0x66, 0x72, 0x44, 0x73, 0x36, 0x74, 0x25, 0x56, 0x37, 0x68, 0x76, 0x41}}, StringData:map[string]string(nil), Type:"Opaque"}
2021-01-05T22:48:39.786+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading secret storage
2021-01-05T22:48:39.788+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-secret-key", GenerateName:"", Namespace:"openfaas-fn", SelfLink:"/api/v1/namespaces/openfaas-fn/secrets/storage-secret-key", UID:"70f5e365-e523-4eae-92b7-39ba7713c7da", ResourceVersion:"234174", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0008ce440), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008ce460)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"storage-secret-key":[]uint8{0x51, 0x39, 0x6d, 0x62, 0x66, 0x72, 0x44, 0x73, 0x36, 0x74, 0x25, 0x56, 0x37, 0x68, 0x76, 0x41}}, StringData:map[string]string(nil), Type:"Opaque"}
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_secret.storage-secret-key, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_secret.storage-secret-key
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.storage-secret-key
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_secret.storage-secret-key
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.storage-secret-key
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_secret.storage-secret-key": visit complete
2021-01-05T22:48:39.824+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys
2021-01-05T22:48:39.824+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys
2021-01-05T22:48:39.824+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.resources" from ComputedKeys
2021-01-05T22:48:39.825+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys
2021-01-05T22:48:39.826+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.resources" from ComputedKeys
2021-01-05T22:48:39.826+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys
2021-01-05T22:48:39.826+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys
2021-01-05T22:48:39.826+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.resources" from ComputedKeys
2021-01-05T22:48:39.827+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys
2021-01-05T22:48:39.827+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys
2021-01-05T22:48:39.827+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.resources" from ComputedKeys
2021-01-05T22:48:39.827+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.resources" from ComputedKeys
2021-01-05T22:48:39.828+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys
2021-01-05T22:48:39.829+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Expanded StatefulSet.Spec.UpdateStrategy: &v1.StatefulSetUpdateStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateStatefulSetStrategy)(0xc0005f4fa0)}
2021-01-05T22:48:39.830+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Creating new StatefulSet: v1.StatefulSet{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.StatefulSetSpec{Replicas:(*int32)(0xc0014758bc), Selector:(*v1.LabelSelector)(0xc000fa1fc0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"database"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"database", Image:"postgres", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"POSTGRES_USER", Value:"postgres", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"POSTGRES_DB", Value:"pipelines", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"POSTGRES_PASSWORD", Value:"6AtwjpVmSb1c7KoK", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"database", ReadOnly:false, MountPath:"/var/lib/postgresql/data", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(0xc00113d9f0), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0014758e0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0014758d8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0014758da), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0014758d9), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, VolumeClaimTemplates:[]v1.PersistentVolumeClaim{v1.PersistentVolumeClaim{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PersistentVolumeClaimSpec{AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce"}, Selector:(*v1.LabelSelector)(0xc0008be040), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}}, VolumeName:"", StorageClassName:(*string)(0xc00113da40), VolumeMode:(*v1.PersistentVolumeMode)(nil), DataSource:(*v1.TypedLocalObjectReference)(nil)}, Status:v1.PersistentVolumeClaimStatus{Phase:"", AccessModes:[]v1.PersistentVolumeAccessMode(nil), Capacity:v1.ResourceList(nil), Conditions:[]v1.PersistentVolumeClaimCondition(nil)}}}, ServiceName:"database", PodManagementPolicy:"", UpdateStrategy:v1.StatefulSetUpdateStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateStatefulSetStrategy)(0xc0005f4fa0)}, RevisionHistoryLimit:(*int32)(0xc0014758c0)}, Status:v1.StatefulSetStatus{ObservedGeneration:0, Replicas:0, ReadyReplicas:0, CurrentReplicas:0, UpdatedReplicas:0, CurrentRevision:"", UpdateRevision:"", CollisionCount:(*int32)(nil), Conditions:[]v1.StatefulSetCondition(nil)}}
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_stateful_set.storage, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount[0].mount_propagation: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount[0].read_only: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].resources: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].metadata[0].annotations: planned value cty.NullVal(cty.Map(cty.String)) does not match config value cty.MapValEmpty(cty.String)
      - .spec[0].volume_claim_template[0].metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
2021/01/05 22:48:39 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/05 22:48:39 [TRACE] EvalReadState: reading state for kubernetes_stateful_set.storage
2021/01/05 22:48:39 [TRACE] EvalReadState: no state present for kubernetes_stateful_set.storage
2021/01/05 22:48:39 [DEBUG] EvalApply: ProviderMeta config value set
2021/01/05 22:48:39 [DEBUG] kubernetes_stateful_set.storage: applying the planned Create change
2021/01/05 22:48:39 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-05T22:48:39.865+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/secrets/storage", UID:"32b39fc5-e285-4e27-98e8-a9dbca4c38c0", ResourceVersion:"234175", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0008b82c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008b82e0)}}}, Immutable:(*bool)(nil), Data:map[string][]uint8{"access_key":[]uint8{0x6d, 0x69, 0x6e, 0x69, 0x6f}, "secret_key":[]uint8{0x51, 0x39, 0x6d, 0x62, 0x66, 0x72, 0x44, 0x73, 0x36, 0x74, 0x25, 0x56, 0x37, 0x68, 0x76, 0x41}}, StringData:map[string]string(nil), Type:"Opaque"}
2021/01/05 22:48:39 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_secret.storage, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_secret.storage
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.storage
2021/01/05 22:48:39 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_secret.storage
2021/01/05 22:48:39 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.storage
2021/01/05 22:48:39 [TRACE] vertex "kubernetes_secret.storage": visit complete
2021-01-05T22:48:39.890+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.resources" from ComputedKeys
2021-01-05T22:48:39.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys
2021-01-05T22:48:39.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys
2021-01-05T22:48:39.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Submitted new StatefulSet: &v1.StatefulSet{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"/apis/apps/v1/namespaces/default/statefulsets/database", UID:"c9fb356a-2e03-4a33-9c01-2d08336d272f", ResourceVersion:"234177", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0008a8120), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008a8160)}}}, Spec:v1.StatefulSetSpec{Replicas:(*int32)(0xc0008949f8), Selector:(*v1.LabelSelector)(0xc0008a8180), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"database"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"database", Image:"postgres", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"POSTGRES_USER", Value:"postgres", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"POSTGRES_DB", Value:"pipelines", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"POSTGRES_PASSWORD", Value:"6AtwjpVmSb1c7KoK", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"database", ReadOnly:false, MountPath:"/var/lib/postgresql/data", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(0xc001067a20), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000894b40), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000894b48), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000894b49), SecurityContext:(*v1.PodSecurityContext)(0xc0001983f0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000894b4a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, VolumeClaimTemplates:[]v1.PersistentVolumeClaim{v1.PersistentVolumeClaim{TypeMeta:v1.TypeMeta{Kind:"PersistentVolumeClaim", APIVersion:"v1"}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PersistentVolumeClaimSpec{AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce"}, Selector:(*v1.LabelSelector)(0xc0008a81a0), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}}, VolumeName:"", StorageClassName:(*string)(0xc001067a70), VolumeMode:(*v1.PersistentVolumeMode)(0xc001067a80), DataSource:(*v1.TypedLocalObjectReference)(nil)}, Status:v1.PersistentVolumeClaimStatus{Phase:"Pending", AccessModes:[]v1.PersistentVolumeAccessMode(nil), Capacity:v1.ResourceList(nil), Conditions:[]v1.PersistentVolumeClaimCondition(nil)}}}, ServiceName:"database", PodManagementPolicy:"OrderedReady", UpdateStrategy:v1.StatefulSetUpdateStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateStatefulSetStrategy)(0xc000e01c20)}, RevisionHistoryLimit:(*int32)(0xc000894c30)}, Status:v1.StatefulSetStatus{ObservedGeneration:0, Replicas:0, ReadyReplicas:0, CurrentReplicas:0, UpdatedReplicas:0, CurrentRevision:"", UpdateRevision:"", CollisionCount:(*int32)(nil), Conditions:[]v1.StatefulSetCondition(nil)}}
2021-01-05T22:48:39.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] StatefulSet default/database created
2021-01-05T22:48:39.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.resources" from ComputedKeys
2021-01-05T22:48:39.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading stateful set default/database
2021-01-05T22:48:39.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys
2021-01-05T22:48:39.891+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys
2021-01-05T22:48:39.892+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys
2021-01-05T22:48:39.892+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys
2021-01-05T22:48:39.892+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.resources" from ComputedKeys
2021-01-05T22:48:39.892+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.resources" from ComputedKeys
2021-01-05T22:48:39.894+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.resources" from ComputedKeys
2021-01-05T22:48:39.895+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys
2021-01-05T22:48:39.895+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys
2021-01-05T22:48:39.897+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Expanded StatefulSet.Spec.UpdateStrategy: &v1.StatefulSetUpdateStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateStatefulSetStrategy)(0xc000f60ad8)}
2021-01-05T22:48:39.898+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Creating new StatefulSet: v1.StatefulSet{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.StatefulSetSpec{Replicas:(*int32)(0xc0010e49c0), Selector:(*v1.LabelSelector)(0xc0000cb9c0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"storage", Image:"minio/minio:RELEASE.2020-11-25T22-36-25Z", Command:[]string{}, Args:[]string{"server", "http://storage-0.storage.default.svc.cluster.local/data", "http://storage-1.storage.default.svc.cluster.local/data", "http://storage-2.storage.default.svc.cluster.local/data", "http://storage-3.storage.default.svc.cluster.local/data"}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:9000, ContainerPort:9000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"MINIO_ACCESS_KEY", Value:"minio", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"MINIO_SECRET_KEY", Value:"Q9mbfrDs6t%V7hvA", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"storage", ReadOnly:false, MountPath:"/data", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(0xc00128eab0), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0010e49e8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0010e49e0), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0010e49e2), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0010e49e1), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, VolumeClaimTemplates:[]v1.PersistentVolumeClaim{v1.PersistentVolumeClaim{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PersistentVolumeClaimSpec{AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce"}, Selector:(*v1.LabelSelector)(0xc0000cba80), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}}, VolumeName:"", StorageClassName:(*string)(0xc00128eb00), VolumeMode:(*v1.PersistentVolumeMode)(nil), DataSource:(*v1.TypedLocalObjectReference)(nil)}, Status:v1.PersistentVolumeClaimStatus{Phase:"", AccessModes:[]v1.PersistentVolumeAccessMode(nil), Capacity:v1.ResourceList(nil), Conditions:[]v1.PersistentVolumeClaimCondition(nil)}}}, ServiceName:"storage", PodManagementPolicy:"", UpdateStrategy:v1.StatefulSetUpdateStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateStatefulSetStrategy)(0xc000f60ad8)}, RevisionHistoryLimit:(*int32)(0xc0010e49c4)}, Status:v1.StatefulSetStatus{ObservedGeneration:0, Replicas:0, ReadyReplicas:0, CurrentReplicas:0, UpdatedReplicas:0, CurrentRevision:"", UpdateRevision:"", CollisionCount:(*int32)(nil), Conditions:[]v1.StatefulSetCondition(nil)}}
2021-01-05T22:48:39.960+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Received stateful set: &v1.StatefulSet{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"/apis/apps/v1/namespaces/default/statefulsets/database", UID:"c9fb356a-2e03-4a33-9c01-2d08336d272f", ResourceVersion:"234177", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0008b8500), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008b8520)}}}, Spec:v1.StatefulSetSpec{Replicas:(*int32)(0xc000b94e38), Selector:(*v1.LabelSelector)(0xc0008b8540), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"database"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"database", Image:"postgres", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"POSTGRES_USER", Value:"postgres", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"POSTGRES_DB", Value:"pipelines", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"POSTGRES_PASSWORD", Value:"6AtwjpVmSb1c7KoK", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"database", ReadOnly:false, MountPath:"/var/lib/postgresql/data", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(0xc0014b41f0), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000b956f0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000b956f8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000b956f9), SecurityContext:(*v1.PodSecurityContext)(0xc0002b0460), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000b956fa), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, VolumeClaimTemplates:[]v1.PersistentVolumeClaim{v1.PersistentVolumeClaim{TypeMeta:v1.TypeMeta{Kind:"PersistentVolumeClaim", APIVersion:"v1"}, ObjectMeta:v1.ObjectMeta{Name:"database", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PersistentVolumeClaimSpec{AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce"}, Selector:(*v1.LabelSelector)(0xc0008b8560), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}}, VolumeName:"", StorageClassName:(*string)(0xc0014b4240), VolumeMode:(*v1.PersistentVolumeMode)(0xc0014b4250), DataSource:(*v1.TypedLocalObjectReference)(nil)}, Status:v1.PersistentVolumeClaimStatus{Phase:"Pending", AccessModes:[]v1.PersistentVolumeAccessMode(nil), Capacity:v1.ResourceList(nil), Conditions:[]v1.PersistentVolumeClaimCondition(nil)}}}, ServiceName:"database", PodManagementPolicy:"OrderedReady", UpdateStrategy:v1.StatefulSetUpdateStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateStatefulSetStrategy)(0xc00000e8d0)}, RevisionHistoryLimit:(*int32)(0xc000b95f70)}, Status:v1.StatefulSetStatus{ObservedGeneration:0, Replicas:0, ReadyReplicas:0, CurrentReplicas:0, UpdatedReplicas:0, CurrentRevision:"", UpdateRevision:"", CollisionCount:(*int32)(nil), Conditions:[]v1.StatefulSetCondition(nil)}}
2021-01-05T22:48:39.962+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [DEBUG] Persistent volume storage-0 status received: "Available"
2021-01-05T22:48:39.962+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Persistent volume storage-0 created
2021-01-05T22:48:39.962+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:39 [INFO] Reading persistent volume storage-0
2021-01-05T22:48:40.010+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:40 [INFO] Submitted new StatefulSet: &v1.StatefulSet{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"/apis/apps/v1/namespaces/default/statefulsets/storage", UID:"ce40f7c2-47e8-4c79-a540-35c83ce8cf28", ResourceVersion:"234179", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0000ca840), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000ca860)}}}, Spec:v1.StatefulSetSpec{Replicas:(*int32)(0xc000f2e558), Selector:(*v1.LabelSelector)(0xc0000ca880), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"storage", Image:"minio/minio:RELEASE.2020-11-25T22-36-25Z", Command:[]string(nil), Args:[]string{"server", "http://storage-0.storage.default.svc.cluster.local/data", "http://storage-1.storage.default.svc.cluster.local/data", "http://storage-2.storage.default.svc.cluster.local/data", "http://storage-3.storage.default.svc.cluster.local/data"}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:9000, ContainerPort:9000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"MINIO_ACCESS_KEY", Value:"minio", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"MINIO_SECRET_KEY", Value:"Q9mbfrDs6t%V7hvA", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"storage", ReadOnly:false, MountPath:"/data", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(0xc000840270), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000f2f678), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000f2f689), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000f2f68a), SecurityContext:(*v1.PodSecurityContext)(0xc000e94070), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000f2f68b), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, VolumeClaimTemplates:[]v1.PersistentVolumeClaim{v1.PersistentVolumeClaim{TypeMeta:v1.TypeMeta{Kind:"PersistentVolumeClaim", APIVersion:"v1"}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PersistentVolumeClaimSpec{AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce"}, Selector:(*v1.LabelSelector)(0xc0000ca8c0), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}}, VolumeName:"", StorageClassName:(*string)(0xc000840390), VolumeMode:(*v1.PersistentVolumeMode)(0xc0008403c0), DataSource:(*v1.TypedLocalObjectReference)(nil)}, Status:v1.PersistentVolumeClaimStatus{Phase:"Pending", AccessModes:[]v1.PersistentVolumeAccessMode(nil), Capacity:v1.ResourceList(nil), Conditions:[]v1.PersistentVolumeClaimCondition(nil)}}}, ServiceName:"storage", PodManagementPolicy:"OrderedReady", UpdateStrategy:v1.StatefulSetUpdateStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateStatefulSetStrategy)(0xc00000e9b8)}, RevisionHistoryLimit:(*int32)(0xc000f2fb10)}, Status:v1.StatefulSetStatus{ObservedGeneration:0, Replicas:0, ReadyReplicas:0, CurrentReplicas:0, UpdatedReplicas:0, CurrentRevision:"", UpdateRevision:"", CollisionCount:(*int32)(nil), Conditions:[]v1.StatefulSetCondition(nil)}}
2021-01-05T22:48:40.010+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:40 [INFO] StatefulSet default/storage created
2021-01-05T22:48:40.010+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:40 [INFO] Reading stateful set default/storage
2021/01/05 22:48:40 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_stateful_set.database, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/01/05 22:48:40 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_stateful_set.database
2021/01/05 22:48:40 [TRACE] EvalWriteState: writing current state object for kubernetes_stateful_set.database
2021/01/05 22:48:40 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_stateful_set.database
2021/01/05 22:48:40 [TRACE] EvalWriteState: writing current state object for kubernetes_stateful_set.database
2021/01/05 22:48:40 [TRACE] vertex "kubernetes_stateful_set.database": visit complete
2021-01-05T22:48:40.038+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:40 [DEBUG] Persistent volume storage-2 status received: "Available"
2021-01-05T22:48:40.038+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:40 [INFO] Persistent volume storage-2 created
2021-01-05T22:48:40.038+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:40 [INFO] Reading persistent volume storage-2
2021-01-05T22:48:40.047+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:40 [INFO] Received stateful set: &v1.StatefulSet{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"/apis/apps/v1/namespaces/default/statefulsets/storage", UID:"ce40f7c2-47e8-4c79-a540-35c83ce8cf28", ResourceVersion:"234179", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0008ce3e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008ce400)}}}, Spec:v1.StatefulSetSpec{Replicas:(*int32)(0xc000b94f78), Selector:(*v1.LabelSelector)(0xc0008ce420), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"storage", Image:"minio/minio:RELEASE.2020-11-25T22-36-25Z", Command:[]string(nil), Args:[]string{"server", "http://storage-0.storage.default.svc.cluster.local/data", "http://storage-1.storage.default.svc.cluster.local/data", "http://storage-2.storage.default.svc.cluster.local/data", "http://storage-3.storage.default.svc.cluster.local/data"}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:9000, ContainerPort:9000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"MINIO_ACCESS_KEY", Value:"minio", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"MINIO_SECRET_KEY", Value:"Q9mbfrDs6t%V7hvA", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"storage", ReadOnly:false, MountPath:"/data", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(0xc00061a1b0), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000b95bf8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000b95c09), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000b95c0a), SecurityContext:(*v1.PodSecurityContext)(0xc000540310), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000b95c0b), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, VolumeClaimTemplates:[]v1.PersistentVolumeClaim{v1.PersistentVolumeClaim{TypeMeta:v1.TypeMeta{Kind:"PersistentVolumeClaim", APIVersion:"v1"}, ObjectMeta:v1.ObjectMeta{Name:"storage", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PersistentVolumeClaimSpec{AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce"}, Selector:(*v1.LabelSelector)(0xc0008ce460), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}}, VolumeName:"", StorageClassName:(*string)(0xc00061a230), VolumeMode:(*v1.PersistentVolumeMode)(0xc00061a240), DataSource:(*v1.TypedLocalObjectReference)(nil)}, Status:v1.PersistentVolumeClaimStatus{Phase:"Pending", AccessModes:[]v1.PersistentVolumeAccessMode(nil), Capacity:v1.ResourceList(nil), Conditions:[]v1.PersistentVolumeClaimCondition(nil)}}}, ServiceName:"storage", PodManagementPolicy:"OrderedReady", UpdateStrategy:v1.StatefulSetUpdateStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateStatefulSetStrategy)(0xc0005f40c0)}, RevisionHistoryLimit:(*int32)(0xc001474170)}, Status:v1.StatefulSetStatus{ObservedGeneration:0, Replicas:0, ReadyReplicas:0, CurrentReplicas:0, UpdatedReplicas:0, CurrentRevision:"", UpdateRevision:"", CollisionCount:(*int32)(nil), Conditions:[]v1.StatefulSetCondition(nil)}}
2021-01-05T22:48:40.049+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:40 [INFO] Received persistent volume: &v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-0", GenerateName:"", Namespace:"", SelfLink:"/api/v1/persistentvolumes/storage-0", UID:"b7dd57c5-4562-44e6-91e1-2e0a00d0f2fc", ResourceVersion:"234170", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"kubernetes.io/pv-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000fa1bc0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1be0)}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000fa1c00), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1c20)}}}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc000fa1c40), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc00102e890), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"Available", Message:"", Reason:""}}
2021/01/05 22:48:40 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:40 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:40 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:40 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-0
2021/01/05 22:48:40 [TRACE] vertex "kubernetes_persistent_volume.storage-0": visit complete
2021-01-05T22:48:40.105+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:40 [INFO] Received persistent volume: &v1.PersistentVolume{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"storage-2", GenerateName:"", Namespace:"", SelfLink:"/api/v1/persistentvolumes/storage-2", UID:"d136f228-aff3-41c0-891d-7c4f00af5484", ResourceVersion:"234176", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63745480119, loc:(*time.Location)(0x3eeb400)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"storage"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"kubernetes.io/pv-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0000ca240), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000ca2a0)}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0000ca2e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000ca300)}}}, Spec:v1.PersistentVolumeSpec{Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, PersistentVolumeSource:v1.PersistentVolumeSource{GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), HostPath:(*v1.HostPathVolumeSource)(0xc0000ca320), Glusterfs:(*v1.GlusterfsPersistentVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), RBD:(*v1.RBDPersistentVolumeSource)(nil), ISCSI:(*v1.ISCSIPersistentVolumeSource)(nil), Cinder:(*v1.CinderPersistentVolumeSource)(nil), CephFS:(*v1.CephFSPersistentVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), FlexVolume:(*v1.FlexPersistentVolumeSource)(nil), AzureFile:(*v1.AzureFilePersistentVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOPersistentVolumeSource)(nil), Local:(*v1.LocalVolumeSource)(nil), StorageOS:(*v1.StorageOSPersistentVolumeSource)(nil), CSI:(*v1.CSIPersistentVolumeSource)(nil)}, AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce", "ReadWriteMany"}, ClaimRef:(*v1.ObjectReference)(nil), PersistentVolumeReclaimPolicy:"Retain", StorageClassName:"standard", MountOptions:[]string(nil), VolumeMode:(*v1.PersistentVolumeMode)(0xc00192a170), NodeAffinity:(*v1.VolumeNodeAffinity)(nil)}, Status:v1.PersistentVolumeStatus{Phase:"Available", Message:"", Reason:""}}
2021/01/05 22:48:40 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:40 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:40 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:40 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume.storage-2
2021/01/05 22:48:40 [TRACE] vertex "kubernetes_persistent_volume.storage-2": visit complete
2021/01/05 22:48:40 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_stateful_set.storage, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/01/05 22:48:40 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_stateful_set.storage
2021/01/05 22:48:40 [TRACE] EvalWriteState: writing current state object for kubernetes_stateful_set.storage
2021/01/05 22:48:40 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_stateful_set.storage
2021/01/05 22:48:40 [TRACE] EvalWriteState: writing current state object for kubernetes_stateful_set.storage
2021/01/05 22:48:40 [TRACE] vertex "kubernetes_stateful_set.storage": visit complete
2021-01-05T22:48:40.826+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:40 [DEBUG] Configuration contains 1 secrets, saw 1, expected 2
2021-01-05T22:48:40.826+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:40 [TRACE] Waiting 2s before next try
2021-01-05T22:48:42.862+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:42 [DEBUG] Configuration contains 1 secrets, saw 1, expected 2
2021-01-05T22:48:42.862+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:42 [TRACE] Waiting 4s before next try
2021/01/05 22:48:43 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/01/05 22:48:45 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service_account.admin"
2021/01/05 22:48:45 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service_account.admin"
2021-01-05T22:48:46.887+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:46 [DEBUG] Configuration contains 1 secrets, saw 1, expected 2
2021-01-05T22:48:46.887+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:46 [TRACE] Waiting 8s before next try
2021/01/05 22:48:48 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/01/05 22:48:50 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service_account.admin"
2021/01/05 22:48:50 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service_account.admin"
2021/01/05 22:48:53 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021-01-05T22:48:54.916+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:54 [DEBUG] Configuration contains 1 secrets, saw 1, expected 2
2021-01-05T22:48:54.916+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:48:54 [TRACE] Waiting 10s before next try
2021/01/05 22:48:55 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service_account.admin"
2021/01/05 22:48:55 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service_account.admin"
2021/01/05 22:48:58 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/01/05 22:49:00 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service_account.admin"
2021/01/05 22:49:00 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service_account.admin"
2021/01/05 22:49:03 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021-01-05T22:49:04.947+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:49:04 [DEBUG] Configuration contains 1 secrets, saw 1, expected 2
2021-01-05T22:49:04.947+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:49:04 [TRACE] Waiting 10s before next try
2021/01/05 22:49:05 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service_account.admin"
2021/01/05 22:49:05 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service_account.admin"
2021/01/05 22:49:08 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021-01-05T22:49:08.940+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:49:08 [WARN] WaitForState timeout after 30s
2021-01-05T22:49:08.940+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 2021/01/05 22:49:08 [WARN] WaitForState starting 30s refresh grace period
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: panic: runtime error: invalid memory address or nil pointer dereference
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: [signal SIGSEGV: segmentation violation code=0x1 addr=0x20 pc=0x25e8f9c]
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: goroutine 29 [running]:
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: github.com/hashicorp/terraform-provider-kubernetes/kubernetes.resourceKubernetesServiceAccountCreate(0xc00045ea80, 0x297e740, 0xc0000cbda0, 0x2, 0x3f18f20)
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-kubernetes/kubernetes/resource_kubernetes_service_account.go:100 +0x6fc
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc000a3d440, 0xc000f0c780, 0xc00101d120, 0x297e740, 0xc0000cbda0, 0x283f101, 0xc0006bb488, 0xc000e513e0)
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-kubernetes/vendor/github.com/hashicorp/terraform-plugin-sdk/helper/schema/resource.go:310 +0x365
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc00060d600, 0xc000fefa38, 0xc000f0c780, 0xc00101d120, 0xc000dbd5e8, 0xc0006cf920, 0x2841c00)
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-kubernetes/vendor/github.com/hashicorp/terraform-plugin-sdk/helper/schema/provider.go:294 +0x99
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc0000a5ac0, 0x2f4b220, 0xc000853230, 0xc00045e0e0, 0xc0000a5ac0, 0xc000853230, 0xc000bb9ba0)
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-kubernetes/vendor/github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x2a331c0, 0xc0000a5ac0, 0x2f4b220, 0xc000853230, 0xc0000755c0, 0x0, 0x2f4b220, 0xc000853230, 0xc000ab4280, 0x263)
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-kubernetes/vendor/github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: google.golang.org/grpc.(*Server).processUnaryRPC(0xc000221340, 0x2f678c0, 0xc000082f00, 0xc000b5c900, 0xc0008a2e40, 0x3ed2060, 0x0, 0x0, 0x0)
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-kubernetes/vendor/google.golang.org/grpc/server.go:1194 +0x50a
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: google.golang.org/grpc.(*Server).handleStream(0xc000221340, 0x2f678c0, 0xc000082f00, 0xc000b5c900, 0x0)
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-kubernetes/vendor/google.golang.org/grpc/server.go:1517 +0xcfd
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: google.golang.org/grpc.(*Server).serveStreams.func1.2(0xc000616520, 0xc000221340, 0x2f678c0, 0xc000082f00, 0xc000b5c900)
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-kubernetes/vendor/google.golang.org/grpc/server.go:859 +0xa1
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: created by google.golang.org/grpc.(*Server).serveStreams.func1
2021-01-05T22:49:08.943+0100 [DEBUG] plugin.terraform-provider-kubernetes_v1.13.3_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-kubernetes/vendor/google.golang.org/grpc/server.go:857 +0x204
2021-01-05T22:49:08.946+0100 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-01-05T22:49:08.946+0100 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/1.13.3/darwin_amd64/terraform-provider-kubernetes_v1.13.3_x4 pid=85515 error="exit status 2"
2021/01/05 22:49:08 [DEBUG] kubernetes_service_account.admin: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2021/01/05 22:49:08 [TRACE] EvalMaybeTainted: kubernetes_service_account.admin encountered an error during creation, so it is now marked as tainted
2021/01/05 22:49:08 [TRACE] EvalWriteState: removing state object for kubernetes_service_account.admin
2021/01/05 22:49:08 [TRACE] EvalApplyProvisioners: kubernetes_service_account.admin has no state, so skipping provisioners
2021/01/05 22:49:08 [TRACE] EvalMaybeTainted: kubernetes_service_account.admin encountered an error during creation, so it is now marked as tainted
2021/01/05 22:49:08 [TRACE] EvalWriteState: removing state object for kubernetes_service_account.admin
2021/01/05 22:49:08 [TRACE] vertex "kubernetes_service_account.admin": visit complete
2021/01/05 22:49:08 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2021/01/05 22:49:08 [TRACE] dag/walk: upstream of "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" errored, so skipping
2021/01/05 22:49:08 [TRACE] dag/walk: upstream of "root" errored, so skipping
2021-01-05T22:49:09.137+0100 [DEBUG] plugin: plugin exited
